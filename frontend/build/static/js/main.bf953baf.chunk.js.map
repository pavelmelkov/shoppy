{"version":3,"sources":["actions/userAction.js","constants/userConst.js","components/SearchBox.js","components/Categories.js","components/Header.js","constants/orderConst.js","components/Footer.js","actions/productAction.js","constants/productConst.js","components/Modal.js","components/Rating.js","components/Product.js","components/Loader.js","components/Message.js","components/Paginate.js","components/ProductCarousel.js","screens/HomeScreen.js","actions/detailsAction.js","constants/detailsConst.js","screens/ProductScreen.js","actions/cartAction.js","constants/cartConst.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","actions/orderActions.js","screens/ProfileScreen.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","screens/OrderAdminScreen.js","App.js","serviceWorker.js","store.js","reducers/productReducer.js","reducers/detailsReducer.js","reducers/cartReducer.js","reducers/userReducer.js","reducers/orderReducer.js","index.js"],"names":["getUserDetails","id","dispatch","getState","a","type","config","headers","Authorization","userLogin","userInfo","token","axios","get","data","payload","response","message","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","style","backgroundColor","onChange","target","value","Button","variant","className","marginLeft","Categories","Group","paddingRight","margin","Dropdown","Toggle","Menu","padding","to","Item","Header","useDispatch","useSelector","state","Navbar","bg","expand","collapseOnSelect","Container","Brand","aria-controls","Collapse","render","Nav","Link","NavDropdown","title","onClick","localStorage","removeItem","isAdmin","Footer","listProducts","brand","pageNumber","createReview","productId","review","post","ModalWindow","comment","setComment","show","setShow","handleClose","Modal","onHide","closeButton","Title","Body","put","addCommentToReview","controlId","as","row","Rating","reviewed","touch","text","product","modal","setModal","styleCoursor","cursor","useEffect","setId","hideUpdateRow","ratingMouseOver","setReview","rating","undefined","color","colorByTouch","i","onMouseOver","onMouseOut","display","defaultProps","Product","props","Card","_id","Img","width","minHeight","objectFit","src","image","Text","numReviews","price","Loader","styles","height","size","Spinner","animation","role","Message","children","Alert","Paginate","pages","page","Pagination","Array","keys","map","x","key","active","ProductCarousel","productTopRated","productTop","loading","error","products","Carousel","pause","Image","alt","fluid","Caption","HomeScreen","match","params","productList","Helmet","content","Row","Col","sm","md","lg","xl","detailsProduct","ProductScreen","qty","setQty","setRating","setReviewed","details","users","successDetails","success","productReviewCreate","productReview","successReview","errorReview","find","user","toString","alert","paddingLeft","transform","ListGroup","description","countInStock","disabled","length","variamt","reviewItem","createdAt","substring","Label","addToCart","setItem","JSON","stringify","cartList","cartItems","CartScreen","location","search","Number","split","item","rounded","reduce","accumulator","currentValue","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","userState","redirect","placeholder","validateEmail","test","String","toLowerCase","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","validate","setValidate","userReg","userRegister","emailValue","console","log","Toast","position","top","right","getOrderById","orderPay","orderId","paymentResult","listMyOrders","updateOrderByAdmin","order","ProfileScreen","orderList","loadingOrders","errorOrders","orders","userDet","userDetails","userUpdate","setTimeout","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","shippingAddress","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","paymentMethod","setPaymentMethod","Check","label","checked","PlaceOrderScreen","num","cart","itemsPrice","shippingPrice","Math","round","taxPrice","orderCreate","placeOrderHandler","createOrder","orderItems","index","OrderScreen","sdkReady","setSdk","orderDetails","orderPays","loadingPay","successPay","orderUpdateStore","orderUpdate","loadingUpdate","successUpdate","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","window","paypal","href","amount","onSuccess","deliverHandler","UserListScreen","usersList","userList","successDelete","deleteUser","deleteHandler","confirm","delete","emil","UserEditScreen","userId","setIsAdmin","updateUserByAdmin","errorUpdate","ProductListScreen","productDeleteStore","deleteProduct","deleteLoading","deleteSuccess","deleteError","createProductStore","productCreate","createLoading","createSuccess","createError","createdProduct","deleteProductByAdmin","createProductHandler","category","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","productDetails","productUpdate","updateProduct","updateLoading","updateError","uploadFileHandler","file","files","formData","FormData","append","updateProductByAdmin","File","custom","OrderListScreen","orderAllList","orderDelete","deleteOrderByAdmin","textAlign","App","path","component","OrderAdminScreen","ProductEditScreen","exact","Boolean","hostname","reducer","combineReducers","action","usersReviewedThisProduct","existItem","filter","productReviewUpdate","cartItemsFromStorage","getItem","parse","userInfoFromStorage","intitialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.bf953baf.chunk.js","sourcesContent":["import axios from 'axios'\r\nimport { ORDER_LIST_RESET } from '../constants/orderConst'\r\nimport { \r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGOUT,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGIN_SUCCESS,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_END,\r\n\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_SUCCESS,\r\n\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n    USER_UPDATE_ADMIN_REQUEST,\r\n    USER_UPDATE_ADMIN_SUCCESS,\r\n    USER_UPDATE_ADMIN_FAIL\r\n} from '../constants/userConst'\r\n\r\nexport const userLogin = (email, password) => async (dispatch) => {\r\n    try {\r\n       dispatch({\r\n           type: USER_LOGIN_REQUEST\r\n       })\r\n       const config = {\r\n           headers: {\r\n               'Content-Type':'application/json'\r\n           }\r\n       }\r\n       const { data } = await axios.post('/api/users/login', {email, password}, config)\r\n       \r\n       dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n       })\r\n       \r\n       localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n            error.response.data.message :\r\n            error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const userRegister = (email, password, name) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n        const config = {\r\n            headers: {\r\n                'Content-Type':'application/json'\r\n            }\r\n        }\r\n        const { data } = await axios.post(\r\n                '/api/users', \r\n                {email, password, name}, \r\n                config\r\n            )\r\n \r\n        dispatch({\r\n             type: USER_REGISTER_SUCCESS,\r\n             payload: data\r\n        })  \r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n       })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n     } catch (error) {\r\n         dispatch({\r\n             type: USER_REGISTER_FAIL,\r\n             payload: error.response && error.response.data.message ?\r\n             error.response.data.message :\r\n             error.message\r\n         })\r\n     }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type':'application/json',\r\n                 Authorization: `Bearer ${getState().userLogin.userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.get(`/api/users/${id}`,config)\r\n \r\n        dispatch({\r\n             type: USER_DETAILS_SUCCESS,\r\n             payload: data\r\n        })  \r\n     \r\n     } catch (error) {\r\n         dispatch({\r\n             type: USER_DETAILS_FAIL,\r\n             payload: error.response && error.response.data.message ?\r\n             error.response.data.message :\r\n             error.message\r\n         })\r\n     }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type':'application/json',\r\n                 Authorization: `Bearer ${getState().userLogin.userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.put(`/api/users/profile`, user, config)\r\n \r\n        dispatch({\r\n             type: USER_UPDATE_SUCCESS,\r\n             payload: data\r\n        })  \r\n\r\n        setTimeout(() => {\r\n            dispatch({\r\n                type: USER_UPDATE_END\r\n            })\r\n        }, 3000);\r\n     \r\n     } catch (error) {\r\n         dispatch({\r\n             type: USER_UPDATE_FAIL,\r\n             payload: error.response && error.response.data.message ?\r\n             error.response.data.message :\r\n             error.message\r\n         })\r\n     }\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                 Authorization: `Bearer ${getState().userLogin.userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.get(`/api/users`, config)\r\n\r\n        dispatch({\r\n             type: USER_LIST_SUCCESS,\r\n             payload: data\r\n        })  \r\n\r\n     } catch (error) {\r\n         dispatch({\r\n             type: USER_LIST_FAIL,\r\n             payload: error.response && error.response.data.message ?\r\n             error.response.data.message :\r\n             error.message\r\n         })\r\n     }\r\n}\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                 Authorization: `Bearer ${getState().userLogin.userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.delete(`/api/users/${id}`, config)\r\n\r\n        dispatch({\r\n             type: USER_DELETE_SUCCESS,\r\n             payload: data\r\n        })  \r\n\r\n     } catch (error) {\r\n         dispatch({\r\n             type: USER_DELETE_FAIL,\r\n             payload: error.response && error.response.data.message ?\r\n             error.response.data.message :\r\n             error.message\r\n         })\r\n     }\r\n}\r\n\r\n\r\nexport const userLogout = () => async (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({\r\n        type: USER_LOGOUT\r\n    })\r\n    dispatch({\r\n        type: USER_DETAILS_RESET\r\n    })\r\n    dispatch({\r\n        type: ORDER_LIST_RESET\r\n    })\r\n    dispatch({\r\n        type: USER_LIST_RESET\r\n    })\r\n}\r\n\r\nexport const updateUserByAdmin = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_ADMIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                 Authorization: `Bearer ${getState().userLogin.userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.put(`/api/users/${user._id}`, user, config)\r\n\r\n        dispatch({\r\n             type: USER_UPDATE_ADMIN_SUCCESS,\r\n        })  \r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data,\r\n       })  \r\n\r\n     } catch (error) {\r\n         dispatch({\r\n             type: USER_UPDATE_ADMIN_FAIL,\r\n             payload: error.response && error.response.data.message ?\r\n             error.response.data.message :\r\n             error.message\r\n         })\r\n     }\r\n}\r\n\r\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\n\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_SUCCESS'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_END = 'USER_UPDATE_END'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_ADMIN_REQUEST = 'USER_UPDATE_ADMIN_REQUEST'\r\nexport const USER_UPDATE_ADMIN_FAIL = 'USER_UPDATE_ADMIN_FAIL'\r\nexport const USER_UPDATE_ADMIN_SUCCESS = 'USER_UPDATE_ADMIN_SUCCESS'\r\nexport const USER_UPDATE_ADMIN_RESET = 'USER_UPDATE_ADMIN_RESET'\r\n\r\n","import React, {useState} from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\n\r\nconst SearchBox = ({ history }) => {\r\n\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(keyword.trim()){\r\n            history.push(`/search/${keyword}`)\r\n        } else {\r\n            history.push(`/`)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={submitHandler} inline>\r\n            <Form.Control\r\n                type=\"text\"\r\n                name=\"q\"\r\n                style={{backgroundColor:'#D3D3D3'}}\r\n                onChange={(e) => setKeyword(e.target.value)}\r\n            >\r\n            </Form.Control>\r\n            <Button type=\"submit\" variant=\"outline-success\" className=\"p-2\" style={{marginLeft:\"1rem\"}}>\r\n                Search\r\n            </Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","import React from 'react'\r\nimport { Form, Dropdown } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst Categories = () => {\r\n    return (\r\n        <div>\r\n            <Form.Group style={{paddingRight:'1rem', margin:0}}>\r\n                <Dropdown>\r\n                <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                    Brands\r\n                </Dropdown.Toggle>\r\n\r\n                    <Dropdown.Menu style={{padding:'15px'}}>\r\n                        <LinkContainer to=\"/brand/Apple\">\r\n                            <Dropdown.Item>Apple</Dropdown.Item>\r\n                        </LinkContainer>\r\n                        <LinkContainer to=\"/brand/Sony\">\r\n                            <Dropdown.Item>Sony</Dropdown.Item>\r\n                        </LinkContainer>\r\n                        <LinkContainer to=\"/brand/Asus\">\r\n                            <Dropdown.Item>Asus</Dropdown.Item>\r\n                        </LinkContainer>\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n            </Form.Group>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Categories\r\n\r\n","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { userLogout } from '../actions/userAction'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {Nav, Navbar, Container, NavDropdown} from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport  SearchBox  from './SearchBox'\r\nimport Categories from './Categories'\r\n\r\nconst Header = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(userLogout())\r\n    }\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"primary\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n                <Container>\r\n                \r\n                <LinkContainer to=\"/\">\r\n                    <Navbar.Brand>Shoppy</Navbar.Brand>\r\n                </LinkContainer>\r\n\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Route render={({ history }) => <SearchBox history={history} />} />\r\n                        <Nav className=\"ml-auto\">\r\n                        \r\n                            <LinkContainer  to=\"/cart\">\r\n                                <Nav.Link><i className=\"fas fa-shopping-cart\"></i>CART</Nav.Link>\r\n                            </LinkContainer>\r\n                            {\r\n                                userInfo ? (\r\n                                <NavDropdown title={userInfo.name} id=\"username\">\r\n                                    <LinkContainer to=\"/profile\">\r\n                                            <NavDropdown.Item>\r\n                                                Profile\r\n                                            </NavDropdown.Item>\r\n                                    </LinkContainer>  \r\n                                    <NavDropdown.Item onClick={logoutHandler}>\r\n                                            Logout\r\n                                    </NavDropdown.Item>\r\n                                </NavDropdown>\r\n                                ) : \r\n                                <LinkContainer to=\"/login\">\r\n                                    <Nav.Link><i className=\"fas fa-user\"></i>LOGIN</Nav.Link>\r\n                                </LinkContainer>\r\n                            }\r\n                            {\r\n                                (userInfo && userInfo.isAdmin) ?\r\n                                    (\r\n                                        <NavDropdown title=\"Admin\" id=\"adminmenu\">\r\n                                            <LinkContainer to=\"/admin/userlist\">\r\n                                                <NavDropdown.Item>\r\n                                                    Users\r\n                                                </NavDropdown.Item>\r\n                                            </LinkContainer>\r\n                                            <LinkContainer to=\"/admin/productlist\">\r\n                                                <NavDropdown.Item>\r\n                                                    Products\r\n                                                </NavDropdown.Item>\r\n                                            </LinkContainer>\r\n                                            <LinkContainer to=\"/admin/orderlist\">\r\n                                                <NavDropdown.Item>\r\n                                                    Orders\r\n                                                </NavDropdown.Item>\r\n                                            </LinkContainer>\r\n                                        </NavDropdown>\r\n                                    )\r\n                                : null\r\n                             }   \r\n                            \r\n\r\n                        {/* <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\r\n                            <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                            <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n                            <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n                            <NavDropdown.Divider />\r\n                            <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n                        </NavDropdown> */}\r\n                        </Nav>\r\n                        {/* <Form inline>\r\n                            <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n                            <Button variant=\"outline-success\">Search</Button>\r\n                        </Form> */}\r\n                    </Navbar.Collapse>\r\n                    <Categories />\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\nexport const ORDER_DETAILS_RESET = 'ORDER_DETAILS_RESET'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\nexport const ORDER_LIST_RESET = 'ORDER_LIST_RESET'\r\n\r\nexport const ORDER_LIST_ADMIN_REQUEST = 'ORDER_LIST_ADMIN_REQUEST'\r\nexport const ORDER_LIST_ADMIN_SUCCESS = 'ORDER_LIST_ADMIN_SUCCESS'\r\nexport const ORDER_LIST_ADMIN_FAIL = 'ORDER_LIST_ADMIN_FAIL'\r\n\r\nexport const ORDER_DELETE_ADMIN_REQUEST = 'ORDER_DELETE_ADMIN_REQUEST'\r\nexport const ORDER_DELETE_ADMIN_SUCCESS = 'ORDER_DELETE_ADMIN_SUCCESS'\r\nexport const ORDER_DELETE_ADMIN_FAIL = 'ORDER_DELETE_ADMIN_FAIL'\r\n\r\nexport const ORDER_UPDATE_ADMIN_REQUEST = 'ORDER_UPDATE_ADMIN_REQUEST'\r\nexport const ORDER_UPDATE_ADMIN_SUCCESS = 'ORDER_UPDATE_ADMIN_SUCCESS'\r\nexport const ORDER_UPDATE_ADMIN_FAIL = 'ORDER_UPDATE_ADMIN_FAIL'\r\nexport const ORDER_UPDATE_ADMIN_RESET = 'ORDER_UPDATE_ADMIN_RESET'\r\n\r\n","import React from 'react'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer style={{margin: '0 auto'}}>\r\n            footer\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import axios from 'axios'\r\nimport { \r\n    PRODUCT_LIST_REQUEST, \r\n    PRODUCT_LIST_SUCCESS, \r\n    PRODUCT_LIST_FAIL, \r\n\r\n    PRODUCT_DELETE_ADMIN_REQUEST,\r\n    PRODUCT_DELETE_ADMIN_SUCCESS,\r\n    PRODUCT_DELETE_ADMIN_FAIL,\r\n\r\n    PRODUCT_CREATE_ADMIN_REQUEST,\r\n    PRODUCT_CREATE_ADMIN_SUCCESS,\r\n    PRODUCT_CREATE_ADMIN_FAIL,\r\n    \r\n    PRODUCT_UPDATE_ADMIN_REQUEST,\r\n    PRODUCT_UPDATE_ADMIN_SUCCESS,\r\n    PRODUCT_UPDATE_ADMIN_FAIL,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_FAIL,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_UPDATE_REVIEW_REQUEST,\r\n    PRODUCT_UPDATE_REVIEW_SUCCESS,\r\n    PRODUCT_UPDATE_REVIEW_FAIL,\r\n} from '../constants/productConst'\r\n\r\nexport const listProducts = (keyword = '', brand='', pageNumber = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({type: PRODUCT_LIST_REQUEST})\r\n\r\n        if (brand !== '') {\r\n            const { data } = await axios.get(\r\n                `/api/products?brand=${brand}`\r\n                )\r\n                dispatch({\r\n                    type: PRODUCT_LIST_SUCCESS,\r\n                    payload: data\r\n                })\r\n        } else {\r\n            const { data } = await axios.get(\r\n                `/api/products?keyword=${keyword}&pageNumber=${pageNumber}`\r\n                )\r\n                dispatch({\r\n                    type: PRODUCT_LIST_SUCCESS,\r\n                    payload: data\r\n                })\r\n\r\n        }\r\n\r\n      \r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n            error.response.data.message :\r\n            error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({type: PRODUCT_TOP_REQUEST})\r\n\r\n        const { data } = await axios.get(\r\n            `/api/products/top`\r\n            )\r\n            \r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n            error.response.data.message :\r\n            error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteProductByAdmin = (id) => async (dispatch, getState) => {\r\n    try {\r\n\r\n        dispatch({type: PRODUCT_DELETE_ADMIN_REQUEST})\r\n\r\n        const config = {\r\n            headers: {\r\n                 Authorization: `Bearer ${getState().userLogin.userInfo.token}`\r\n            }\r\n        }\r\n        await axios.delete(`/api/products/${id}`, config)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_ADMIN_SUCCESS,\r\n        })\r\n        \r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_ADMIN_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n            error.response.data.message :\r\n            error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProductByAdmin = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({type: PRODUCT_CREATE_ADMIN_REQUEST})\r\n\r\n        const config = {\r\n            headers: {\r\n                 Authorization: `Bearer ${getState().userLogin.userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.post(`/api/products`, {}, config)\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_ADMIN_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_ADMIN_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n            error.response.data.message :\r\n            error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateProductByAdmin = (product) => async (dispatch, getState) => {\r\n    try {\r\n        \r\n        dispatch({type: PRODUCT_UPDATE_ADMIN_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type':'application/json',\r\n                 Authorization: `Bearer ${getState().userLogin.userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.put(`/api/products/${product._id}`, product, config)\r\n\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_ADMIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_ADMIN_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n            error.response.data.message :\r\n            error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const createReview = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n        \r\n        dispatch({type: PRODUCT_CREATE_REVIEW_REQUEST })\r\n        \r\n        const config = {\r\n            headers: {\r\n                'Content-Type':'application/json',\r\n                 Authorization: `Bearer ${getState().userLogin.userInfo.token}`\r\n            }\r\n        }\r\n        await axios.post(`/api/products/${productId}/reviews`, review, config)\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n            error.response.data.message :\r\n            error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const addCommentToReview = (productId, comment) => async (dispatch, getState) => {\r\n    try {\r\n        \r\n        dispatch({type: PRODUCT_UPDATE_REVIEW_REQUEST })\r\n        \r\n        const config = {\r\n            headers: {\r\n                'Content-Type':'application/json',\r\n                 Authorization: `Bearer ${getState().userLogin.userInfo.token}`\r\n            }\r\n        }\r\n        await axios.put(`/api/products/${productId}/reviews`, comment, config)\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REVIEW_SUCCESS,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n            error.response.data.message :\r\n            error.message\r\n        })\r\n    }\r\n}","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\nexport const PRODUCT_LIST_RESET = 'PRODUCT_LIST_RESET'\r\n\r\nexport const PRODUCT_DELETE_ADMIN_REQUEST = 'PRODUCT_DELETE_ADMIN_REQUEST'\r\nexport const PRODUCT_DELETE_ADMIN_SUCCESS = 'PRODUCT_DELETE_ADMIN_SUCCESS'\r\nexport const PRODUCT_DELETE_ADMIN_FAIL = 'PRODUCT_DELETE_ADMIN_FAIL'\r\n\r\nexport const PRODUCT_CREATE_ADMIN_REQUEST = 'PRODUCT_CREATE_ADMIN_REQUEST'\r\nexport const PRODUCT_CREATE_ADMIN_SUCCESS = 'PRODUCT_CREATE_ADMIN_SUCCESS'\r\nexport const PRODUCT_CREATE_ADMIN_FAIL = 'PRODUCT_CREATE_ADMIN_FAIL'\r\nexport const PRODUCT_CREATE_ADMIN_RESET = 'PRODUCT_CREATE_ADMIN_RESET'\r\n\r\nexport const PRODUCT_UPDATE_ADMIN_SUCCESS = 'PRODUCT_UPDATE_ADMIN_SUCCESS'\r\nexport const PRODUCT_UPDATE_ADMIN_REQUEST = 'PRODUCT_UPDATE_ADMIN_REQUEST'\r\nexport const PRODUCT_UPDATE_ADMIN_FAIL = 'PRODUCT_UPDATE_ADMIN_FAIL'\r\nexport const PRODUCT_UPDATE_ADMIN_RESET = 'PRODUCT_UPDATE_ADMIN_RESET'\r\n\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_UPDATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_UPDATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_UPDATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_UPDATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\r\n\r\nexport const PRODUCT_UPDATE_REVIEW_SUCCESS = 'PRODUCT_UPDATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_UPDATE_REVIEW_REQUEST = 'PRODUCT_UPDATE_REVIEW_REQUEST'\r\nexport const PRODUCT_UPDATE_REVIEW_FAIL = 'PRODUCT_UPDATE_REVIEW_FAIL'\r\nexport const PRODUCT_UPDATE_REVIEW_RESET = 'PRODUCT_UPDATE_REVIEW_RESET'","import React, {useState} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport { Modal } from 'react-bootstrap'\r\nimport {addCommentToReview} from '../actions/productAction'\r\n\r\nconst ModalWindow = ({ productId }) => {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const [comment, setComment] = useState('')\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const userLogin = useSelector(state => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const sumbmitHandler = (e) => {\r\n      e.preventDefault()\r\n      setShow(false)\r\n      dispatch(addCommentToReview(productId, {comment}))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Button variant=\"primary\" style={{margin:'12px'}} onClick={handleShow}>\r\n        Write Review\r\n      </Button>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Write review</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Comment</Modal.Body>\r\n\r\n        {\r\n            userInfo ?\r\n            (\r\n                <Form onSubmit={sumbmitHandler} style={{padding:'15px'}}>\r\n                    <Form.Group controlId=\"comment\">\r\n                         <Form.Control \r\n                             as=\"textarea\" \r\n                             row=\"3\" \r\n                             value={comment} \r\n                             onChange={(e)=>setComment(e.target.value)}>\r\n                          </Form.Control>\r\n                     </Form.Group>\r\n                     <Button \r\n                         type=\"submit\"\r\n                          variant=\"primary\"\r\n                         >\r\n                              Comment\r\n                     </Button>\r\n                     <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n                 </Form>   \r\n             ) : null\r\n\r\n        }\r\n       \r\n        <Modal.Footer>\r\n          \r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ModalWindow\r\n","import React, {useState, useEffect} from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport PropTypes from 'prop-types';\r\nimport ModalWindow from '../components/Modal'\r\nimport {createReview} from '../actions/productAction'\r\n\r\nconst Rating = ({reviewed, touch, productId, value, text}) => {\r\n\r\n    const product = productId\r\n\r\n    const dispatch = useDispatch()\r\n    const [modal, setModal] = useState(false)\r\n\r\n    let styleCoursor = {}\r\n\r\n    if (touch) {\r\n        styleCoursor = {\r\n            ...styleCoursor, cursor:'pointer'\r\n        }\r\n    } else {\r\n        styleCoursor = {}\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n\r\n        }, [reviewed]\r\n    )\r\n\r\n    const [id, setId] = useState(0)\r\n    const hideUpdateRow = () => {\r\n        setId(0)\r\n    }\r\n    const ratingMouseOver = (e) => {\r\n        if (!e.target.id) {\r\n            setId(0)\r\n        } else {\r\n            setId(e.target.id)\r\n        }\r\n    }\r\n\r\n    const setReview = () => {\r\n        if (!reviewed){\r\n            setModal(true)\r\n            dispatch(createReview(product, \r\n                {\r\n                    rating: id,\r\n                    comment: undefined\r\n                }\r\n            ))\r\n        }\r\n    }\r\n\r\n    const color = (\r\n        id === '1' ?\r\n        [\r\n        'red',\r\n        'yellow',\r\n        'yellow',\r\n        'yellow',\r\n        'yellow'\r\n        ] :\r\n        id === '2' ?\r\n        [\r\n        'red',\r\n        'red',\r\n        'yellow',\r\n        'yellow',\r\n        'yellow'\r\n         ] :\r\n        id === '3' ?\r\n        [\r\n        'red',\r\n        'red',\r\n        'red',\r\n        'yellow',\r\n        'yellow'\r\n        ] :\r\n        id === '4' ?\r\n        [\r\n        'red',\r\n        'red',\r\n        'red',\r\n        'red',\r\n        'yellow'\r\n        ] :\r\n        id === '5' ?\r\n        [\r\n        'red',\r\n        'red',\r\n        'red',\r\n        'red',\r\n        'red'\r\n        ] :\r\n        [\r\n        'yellow',\r\n        'yellow',\r\n        'yellow',\r\n        'yellow',\r\n        'yellow'\r\n        ] \r\n    )\r\n\r\n    const colorByTouch = []\r\n    if (!reviewed) {\r\n        for(let i = 0; i <= 4; i++) {\r\n            colorByTouch.push(color[i])\r\n        }\r\n    } else {\r\n        for(let i = 0; i <= 4; i++) {\r\n            colorByTouch.push('yellow')\r\n        }\r\n    }\r\n    \r\n\r\n    return (\r\n        <>\r\n        {\r\n            (modal && touch && !reviewed) ? \r\n            <ModalWindow productId={product}/>\r\n            : \r\n            null\r\n        }\r\n        <div className=\"rating\">\r\n            <div\r\n                onClick={() => setReview()}\r\n                onMouseOver={(e) => ratingMouseOver(e)} \r\n                onMouseOut={() => hideUpdateRow()}  \r\n                style={{  display:'inline-block', ...styleCoursor }}>\r\n                <span>\r\n                    <i \r\n                    id='1'\r\n                    style={{color: `${colorByTouch[0]}` }}\r\n                    className={ \r\n                        value >= 1 ? 'fas fa-star' \r\n                        : value >= 0.5 ? 'fas fa-star-half-alt' \r\n                        : 'far fa-star'\r\n                        }\r\n                    >  \r\n                    </i>\r\n                </span>\r\n            </div>\r\n                \r\n            <div\r\n                onClick={() => setReview()}\r\n                onMouseOver={(e) => ratingMouseOver(e)}   \r\n                style={{  display:'inline-block', ...styleCoursor}}>\r\n                <span>\r\n                    <i \r\n                    id='2'\r\n                    style={{color: `${colorByTouch[1]}` }}\r\n                        className={ \r\n                            value >= 2 ? 'fas fa-star' \r\n                            : value >= 1.5 ? 'fas fa-star-half-alt' \r\n                            : 'far fa-star' \r\n                            }\r\n                    >  \r\n                    </i>\r\n                </span>\r\n            </div>\r\n           \r\n            <div\r\n                onClick={() => setReview()}\r\n                onMouseOver={(e) => ratingMouseOver(e)}   \r\n                style={{  display:'inline-block', ...styleCoursor}}>\r\n                <span>\r\n                    <i \r\n                    id='3'\r\n                    style={{color: `${colorByTouch[2]}` }}\r\n                    className={ \r\n                        value >= 3 ? 'fas fa-star' \r\n                        : value >= 2.5 ? 'fas fa-star-half-alt' \r\n                        : 'far fa-star'\r\n                        }\r\n                    >  \r\n                    </i>\r\n                </span>\r\n            </div>\r\n           \r\n            <div\r\n                onClick={() => setReview()}\r\n                onMouseOver={(e) => ratingMouseOver(e)}   \r\n                style={{  display:'inline-block', ...styleCoursor}}>\r\n                <span>\r\n                    <i \r\n                    id=\"4\"\r\n                    style={{color: `${colorByTouch[3]}` }}\r\n                    className={ \r\n                        value >= 4 ? 'fas fa-star' \r\n                        : value >= 3.5 ? 'fas fa-star-half-alt' \r\n                        : 'far fa-star'\r\n                        }\r\n                    >  \r\n                    </i>\r\n                </span>\r\n            </div>\r\n          \r\n            <div\r\n                onClick={() => setReview()}\r\n                onMouseOver={(e) => ratingMouseOver(e)}   \r\n                onMouseOut={() => hideUpdateRow()}  \r\n                style={{  display:'inline-block', ...styleCoursor}}>\r\n                <span>\r\n                    <i \r\n                    id='5'\r\n                    style={{color: `${colorByTouch[4]}` }}\r\n                    className={ \r\n                        value >= 5 ? 'fas fa-star' \r\n                        : value >= 4.5 ? 'fas fa-star-half-alt' \r\n                        : 'far fa-star'\r\n                        }\r\n                    >  \r\n                    </i>\r\n                </span>\r\n            </div>\r\n            <>\r\n                <span> {text ? text : ''} </span>\r\n            </>\r\n          \r\n        </div>\r\n    </>\r\n    )\r\n}\r\n\r\n\r\nRating.defaultProps = {\r\n    color: '#f8e825',\r\n}\r\n\r\nRating.propTypes={\r\n    text: PropTypes.string.isRequired,\r\n    color: PropTypes.string,\r\n}\r\n\r\nexport default Rating\r\n\r\n","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Product = (props) => {\r\n    return (\r\n        <Card className=\"my-3 p-2 rounded\">\r\n            <Link to={`/product/${props.product._id}`}>\r\n                <Card.Img \r\n                    style={{width:'100%', minHeight: \"37vh\", objectFit:'cover'}} \r\n                    src={props.product.image} variant=\"top\" \r\n                />\r\n            </Link>\r\n            <Card.Body>\r\n            <Link to={`/product/${props.product._id}`}>\r\n                <Card.Title as=\"div\"> \r\n                    <strong>{props.product.name}</strong> \r\n                </Card.Title>\r\n            </Link>\r\n                <Card.Text as=\"div\">  \r\n                    <Rating \r\n                        reviewed={true}\r\n                        value={props.product.rating} \r\n                        text={`${props.product.numReviews} reviews`}\r\n                        // color='red'\r\n                    />\r\n                </Card.Text>\r\n                <Card.Text as=\"h3\">  \r\n                    ${props.product.price}\r\n                </Card.Text>\r\n           \r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport {Spinner} from 'react-bootstrap'\r\n\r\nconst Loader = (props) => {\r\n    let styles = {  \r\n        width:'100px', \r\n        height:'100px', \r\n        margin:'auto', \r\n        display: 'block' \r\n    }\r\n\r\n    if (props.size === 'min') {\r\n        styles = {...styles, height:'50px', width:'50px'}\r\n    }\r\n    return (\r\n       \r\n        <Spinner \r\n            animation='border'\r\n            role='status'\r\n            style={ \r\n                styles\r\n            }\r\n        >\r\n            <span className='sr-only'> Loading... </span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nconst Message = ({ variant, children }) => {\r\n    return (\r\n        <Alert variant={variant}> \r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n \r\nconst Paginate = ({ pages, page, isAdmin=false, keyword = '' }) => {\r\n    return pages > 1 && (\r\n        <Pagination>\r\n            {\r\n                [...Array(pages).keys()].map( x => (\r\n                    <LinkContainer key={x + 1} to={\r\n                        !isAdmin ? \r\n                        keyword ? \r\n                            `/search/${keyword}/page/${x + 1}` : \r\n                            `/page/${x + 1}` : \r\n                            `/admin/productlist/${x + 1}`}\r\n                        >\r\n                        <Pagination.Item active={x + 1 === page}>\r\n                            { x + 1 }\r\n                        </Pagination.Item>\r\n                    </LinkContainer>\r\n                ))\r\n            }\r\n        </Pagination>\r\n    )\r\n\r\n    \r\n}\r\n\r\nexport default Paginate\r\n","import React,{useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopProducts } from '../actions/productAction'\r\n\r\nconst ProductCarousel = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productTopRated = useSelector(state => state.productTop)\r\n    const { loading, error, products} = productTopRated\r\n    \r\n    useEffect( () => {\r\n        dispatch(listTopProducts())\r\n    }, [dispatch])\r\n\r\n    return (  \r\n    <> \r\n        {\r\n        loading ? \r\n        <Loader></Loader> : error ? \r\n        <Message variant=\"danger\"> {error} </Message> : \r\n        <Carousel pause=\"hover\" className=\"bg-dark\"  >\r\n            {\r\n            products.map( (product) => (\r\n                <Carousel.Item key={product._id}>\r\n                    <Link to={`/product/${product._id}`}>\r\n                        <Image src={product.image} alt={product.name} fluid/>\r\n                        <Carousel.Caption className=\"carousel-caption\"> \r\n                            <h2> {product.name} ({product.price}) </h2>\r\n                            </Carousel.Caption>\r\n                    </Link>\r\n                </Carousel.Item>\r\n            ))}\r\n        </Carousel>\r\n        }\r\n    </>\r\n    )\r\n}\r\n\r\nexport default ProductCarousel\r\n","import React, { useEffect } from 'react'\r\nimport {Helmet} from \"react-helmet\";\r\n// for flex-box building \r\nimport { Row, Col } from 'react-bootstrap'\r\n// product cart component\r\nimport Product from '../components/Product'\r\n// redux elems\r\nimport { listProducts } from '../actions/productAction'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n// UI components\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\n\r\nconst HomeScreen = ({ match }) => {\r\n\r\n    const keyword = match.params.keyword\r\n\r\n    const brand = match.params.brand\r\n\r\n    const pageNumber = match.params.pageNumber || 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector( state => state.productList )\r\n    const { loading, error, products, page, pages} = productList\r\n\r\n    useEffect( () => {\r\n        dispatch(listProducts(keyword, brand, pageNumber))\r\n    }, [dispatch, keyword, pageNumber, brand])\r\n\r\n    return (\r\n        <> \r\n            <Helmet>\r\n                <title>Welcome to Shoppy | Home</title>\r\n                <meta name=\"description\" content=\"Sell the best products\"/>\r\n                <meta name=\"keywords\" content=\"electronics, buy electronics\"/>\r\n            </Helmet>\r\n        {!keyword && <ProductCarousel />}\r\n            <h1 className=\"my-4\"> \r\n                Latest Products \r\n            </h1> \r\n    {\r\n            loading ? <Loader/> : error ? <Message variant='danger'>{error}</Message> : \r\n            <>\r\n                <Row>\r\n                    {\r\n                        products.map( (product) => (\r\n                            <Col key={product._id} sm={12} md={6} lg={4} xl={3} >\r\n                                <Product product={product} />\r\n                            </Col>\r\n                        ))\r\n                    }\r\n                </Row>\r\n                <Paginate \r\n                    pages={pages} \r\n                    page={page} \r\n                    keyword={keyword ? keyword : ''} \r\n                />\r\n            </>\r\n            }\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import axios from 'axios'\r\nimport { \r\n    PRODUCT_DETAILS_REQUEST, \r\n    PRODUCT_DETAILS_SUCCESS, \r\n    PRODUCT_DETAILS_FAIL \r\n} from '../constants/detailsConst'\r\n\r\nexport const detailsProduct = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({type: PRODUCT_DETAILS_REQUEST})\r\n\r\n        const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n            error.response.data.message :\r\n            error.message\r\n        })\r\n    }\r\n}\r\n","export const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'","import React, { useState, useEffect, useCallback } from 'react'\r\nimport { Helmet } from \"react-helmet\";\r\n// fro button 'back'\r\nimport { Link } from 'react-router-dom'\r\n// for flex-box cart details styles\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\r\n// rating component\r\nimport Rating from '../components/Rating'\r\n// redux elems\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { detailsProduct } from '../actions/detailsAction'\r\nimport { createReview } from '../actions/productAction'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConst'\r\n// UI components\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\n\r\nconst ProductScreen = (props) => {\r\n\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n    const [reviewed, setReviewed] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const details = useSelector(state => state.details)\r\n    const { loading, error, product, users, success: successDetails } = details\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const productReviewCreate = useSelector(state => state.productReview)\r\n    const { success: successReview, error: errorReview } = productReviewCreate\r\n    \r\n    useEffect(() => {\r\n\r\n        if (users && userInfo !== null) {\r\n            const reviewed = users.find(user => user.toString() === userInfo._id.toString()) ? true : false\r\n            setReviewed(reviewed)\r\n        }\r\n\r\n        if (successReview) {\r\n            alert('Review submited')\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n        }\r\n        dispatch(detailsProduct(props.match.params.id))\r\n    }, [dispatch, props.match.params.id, successReview, successDetails, reviewed]) // можно указать, при изменении какого параметра будет вызываться useEffect. \r\n\r\n    const addToCart = () => {\r\n        props.history.push(`/cart/${props.match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    const sumbmitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createReview(props.match.params.id, {\r\n            rating: rating,\r\n            comment: comment,\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <Helmet>\r\n                <title> {`${product.name}`}| Shoppy </title>\r\n                <meta name=\"description\" content=\"Product List\" />\r\n                <meta name=\"keywords\" content=\"electronics, buy electronics\" />\r\n            </Helmet>\r\n\r\n            <Link className=\"btn btn-light my-3\" to=\"/\" onClick={() => setReviewed(false)}>\r\n                Go back\r\n            </Link>\r\n\r\n            <Row>\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> :\r\n                    <Col md={6}>\r\n                        <Image src={product.image} style={{ paddingLeft: '50%', transform: 'translateX(-25%)', height: 'auto', width: 'auto' }} alt={product.name} fluid />\r\n                    </Col>\r\n                }\r\n\r\n                {loading ? <Loader size='min' /> : error ? <Message variant='danger'>{error}</Message> :\r\n                    <Col md={3}>\r\n                        <ListGroup variant=\"flush\">\r\n                            <ListGroup.Item>\r\n                                <h2> {product.name} </h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Rating\r\n                                    reviewed={reviewed}\r\n                                    touch={true}\r\n                                    productId={product._id}\r\n                                    value={product.rating}\r\n                                    text={`${product.numReviews} reviews`}\r\n                                />\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                Price: ${product.price}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                Description: {product.description}\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Col>\r\n                }\r\n\r\n                {loading ? <Loader size='min' /> : error ? <Message variant='danger'>{error}</Message> :\r\n                    <>\r\n                        <Col md={3}>\r\n                            <Card>\r\n                                <ListGroup variant=\"flush\">\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>\r\n                                                Price:\r\n                                     </Col>\r\n                                            <Col>\r\n                                                <strong>\r\n                                                    ${product.price}\r\n                                                </strong>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>\r\n                                                Status:\r\n                                     </Col>\r\n                                            <Col>\r\n                                                {product.countInStock > 0 ? 'in Stock' : 'Out of Stock'}\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    {product.countInStock > 0 && (\r\n                                        <ListGroup.Item>\r\n                                            <Row>\r\n                                                <Col>\r\n                                                    Qty:\r\n                                         </Col>\r\n                                                <Col>\r\n                                                    <Form.Control\r\n                                                        as='select'\r\n                                                        className=\"mr-sm-2\"\r\n                                                        value={qty}\r\n                                                        onChange={(e) => setQty(e.target.value)}\r\n                                                    >\r\n                                                        {\r\n                                                            [...Array(product.countInStock).keys()].map((x) => {\r\n                                                                return (\r\n                                                                    <option key={x + 1} value={x + 1}>\r\n                                                                        {x + 1}\r\n                                                                    </option>\r\n                                                                )\r\n                                                            })\r\n                                                        }\r\n                                                    </Form.Control>\r\n                                                </Col>\r\n                                            </Row>\r\n\r\n\r\n                                        </ListGroup.Item>\r\n                                    )}\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Button\r\n                                            onClick={addToCart}\r\n                                            className=\"btn-block\"\r\n                                            type=\"button\"\r\n                                            disabled={!product.countInStock > 0}\r\n\r\n                                        >\r\n                                            Add To Cart\r\n                                </Button>\r\n                                    </ListGroup.Item>\r\n\r\n                                </ListGroup>\r\n                            </Card>\r\n                        </Col>\r\n\r\n                    </>\r\n                }\r\n            </Row>\r\n            {product.countInStock >= 0 && (\r\n                <>\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <h2 className=\"py-3\">Reviews</h2>\r\n                            {[...product.review].length === 0 && <Message>No Reviews</Message>}\r\n                        </Col>\r\n                    </Row>\r\n                    <ListGroup variamt=\"flush\">\r\n\r\n                        {[...product.review].map((reviewItem) => (\r\n                            <ListGroup.Item key={reviewItem._id}>\r\n                                <strong> {reviewItem.name} </strong>\r\n                                <Rating reviewed={true} touch={false} value={reviewItem.rating} text={(reviewItem.rating).toString()} />\r\n                                <p> {reviewItem.createdAt.substring(0, 10)} </p>\r\n                                <p> {reviewItem.comment} </p>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                        <h2 className=\"py-4\"> Write a customer review </h2>\r\n                        {errorReview && (\r\n                            <Message variant=\"flush\">\r\n                                {errorReview}\r\n                            </Message>\r\n                        )}\r\n                        <ListGroup.Item>\r\n\r\n                            {\r\n                                userInfo ?\r\n                                    (\r\n                                        <Form onSubmit={sumbmitHandler}>\r\n                                            <Form.Group controlId=\"rating\">\r\n                                                <Form.Label>\r\n                                                    Rating\r\n                                        </Form.Label>\r\n                                                <Form.Control\r\n                                                    as=\"select\"\r\n                                                    value={rating}\r\n                                                    onChange={(e) => setRating(e.target.value)}\r\n                                                >\r\n                                                    <option value=''> Select... </option>\r\n                                                    <option value='1'> 1 - Poor </option>\r\n                                                    <option value='2'> 2 - Fair </option>\r\n                                                    <option value='3'> 3 - Good </option>\r\n                                                    <option value='4'> 4 - Very Good </option>\r\n                                                    <option value='5'> 5 - Excellent </option>\r\n                                                </Form.Control>\r\n                                            </Form.Group>\r\n                                            <Form.Group controlId=\"comment\">\r\n                                                <Form.Label>\r\n                                                    Comment\r\n                                        </Form.Label>\r\n\r\n                                                <Form.Control\r\n                                                    as=\"textarea\"\r\n                                                    row=\"3\"\r\n                                                    value={comment}\r\n                                                    onChange={(e) => setComment(e.target.value)}>\r\n                                                </Form.Control>\r\n                                            </Form.Group>\r\n                                            <Button\r\n                                                type=\"submit\"\r\n                                                variant=\"primary\"\r\n                                            >\r\n                                                Comment\r\n                                    </Button>\r\n                                        </Form>\r\n                                    ) : null\r\n\r\n                            }\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n\r\n                </>\r\n\r\n            )}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","import axios from 'axios'\r\n\r\nimport { \r\n    CART_REMOVE_ITEM,\r\n    CART_ADD_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    CART_SAVE_PAYMENT_METHOD,\r\n} from '../constants/cartConst' \r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data.product._id,\r\n            name: data.product.name,\r\n            qty,\r\n            price: data.product.price,\r\n            countInStock: data.product.countInStock,\r\n            image: data.product.image\r\n        }\r\n    })\r\n    \r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cartList.cartItems))\r\n }\r\n\r\n export const removeFromCart = (id) => async (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id \r\n    })\r\n    \r\n    localStorage.removeItem('cartItems', JSON.stringify(getState().cartList.cartItems.find( x => x.product === id )))\r\n }\r\n\r\n export const saveShippingAddress = (data) => async (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data, \r\n    })\r\n    \r\n    localStorage.setItem('shippingAddress', \r\n        JSON.stringify(data))\r\n }\r\n\r\n export const savePaymentMethod = (data) => async (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data, \r\n    })\r\n    \r\n    localStorage.setItem('paymentMethod', \r\n        JSON.stringify(data))\r\n }\r\n \r\n\r\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\n\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\n\r\nexport const CART_RESET = 'CART_RESET'\r\n\r\n\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {Helmet} from \"react-helmet\";\r\n// UI\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart } from '../actions/cartAction'\r\nimport { removeFromCart } from '../actions/cartAction'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n    const productId = match.params.id\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n\r\n    const dispatch = useDispatch()\r\n    const cart = useSelector( (state) => state.cartList)\r\n    const { cartItems } = cart\r\n\r\n    // const [sumCount, setCount] = useState(0)\r\n\r\n    useEffect( () => {\r\n        if (productId) {\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n    \r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n                <Helmet>\r\n                    <title> Your Cart | Shoppy </title>\r\n                    <meta name=\"description\" content=\"Cart of products\"/>\r\n                    <meta name=\"keywords\" content=\"electronics, buy electronics\"/>\r\n                </Helmet>\r\n            <Col md={8}>\r\n                <h1> Shopping Cart </h1>\r\n                {\r\n                    cartItems.length === 0 ? \r\n                    <Message variant='danger'> Cart is empty <Link to='/'>Go back</Link></Message> : \r\n                    <ListGroup variant=\"flush\"> \r\n                        {\r\n                            cartItems.map( (item) => (\r\n                            \r\n                                <ListGroup.Item key={item.product}>\r\n                                    <Row>\r\n                                        <Col md={2}>\r\n                                            <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                        </Col>\r\n                                        <Col md={3}>\r\n                                            <Link to={`/product/${item.product}`}> {item.name} </Link>\r\n                                        </Col>\r\n                                        <Col md={2}>\r\n                                          ${item.price}\r\n                                        </Col>\r\n                                        <Col md={2}>\r\n                                            <Form.Control \r\n                                                as='select'\r\n                                                className=\"mr-sm-2\"\r\n                                                value={qty} \r\n                                                onChange={(e)=> dispatch(addToCart(item.product,\r\n                                                    Number(e.target.value)))} \r\n                                                >\r\n                                                {\r\n                                                     [...Array(item.countInStock).keys()].map( (x) => {\r\n                                                      return (\r\n                                                        <option key={x + 1} value={x + 1}> \r\n                                                            {x + 1}\r\n                                                        </option>\r\n                                                      ) \r\n                                                    })\r\n                                                }\r\n                                            </Form.Control>\r\n                                        </Col>\r\n                                        <Col md={2}>\r\n                                            {item.qty}\r\n                                            <Button type=\"button\" variant=\"light\" onClick={() => {\r\n                                                dispatch(removeFromCart(item.product))\r\n                                            }}>\r\n                                                <i className=\"fa fa-trash\"/>\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                                \r\n                            \r\n                            ))\r\n                        }\r\n                    </ListGroup> \r\n                }\r\n            </Col>\r\n\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant=\"flush\">\r\n                            <ListGroup.Item>\r\n                                <h2> Subtotal (\r\n                                    {   \r\n                                        cartItems.length !== 0 ?\r\n                                            cartItems.reduce( (accumulator, currentValue) => {\r\n                                                return accumulator + currentValue.qty\r\n                                            }, 0) \r\n                                        : \r\n                                        '0'\r\n                                    }\r\n                                ) items </h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <h2> $ \r\n                                    {   \r\n                                        cartItems.length !== 0 ?\r\n                                            cartItems.reduce( (accumulator, currentValue) => {\r\n                                                return accumulator + +currentValue.price*currentValue.qty\r\n                                            }, 0).toFixed(2)\r\n                                        : \r\n                                        '0'\r\n                                    }\r\n                                 </h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                               <Button \r\n                                    type=\"button\" \r\n                                    className='btn-block' \r\n                                    disabled={cartItems.length === 0}\r\n                                    onClick={checkoutHandler}\r\n                                >\r\n                                    Proceed To Checkout\r\n                               </Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n","import React from 'react'\r\nimport {Container, Row, Col} from 'react-bootstrap'\r\n\r\nconst FormContainer = ({children}) => {\r\n    return (\r\n        <Container>\r\n            <Row className='justify-content-md-center'>\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useEffect, useState } from 'react'\r\nimport {Helmet} from \"react-helmet\";\r\nimport { Link } from 'react-router-dom'\r\nimport {userLogin} from '../actions/userAction'\r\n// for flex-box building \r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\n// product cart component\r\nimport FormContainer from '../components/FormContainer'\r\n// redux elems\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n// UI components\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\n\r\nconst LoginScreen = ({location, history}) => {\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userState = useSelector( state => state.userLogin )\r\n    const { loading, error, userInfo } = userState\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect( () => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(userLogin(email, password))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Helmet>\r\n                <title> Login/Logout </title>\r\n                <meta name=\"description\" content=\"Login in the system\"/>\r\n                <meta name=\"keywords\" content=\"electronics, buy electronics\"/>\r\n            </Helmet>\r\n            <FormContainer>\r\n                <h1 className=\"py-4\"> Sign In </h1>\r\n                {\r\n                    error && <Message variant=\"danger\">{error}</Message>\r\n                }\r\n                {\r\n                    loading && <Loader>  </Loader>\r\n                }\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId=\"email\">\r\n                        <Form.Label> Email Address </Form.Label>\r\n                        <Form.Control \r\n                            type=\"email\" \r\n                            placeholder=\"Enter email\" \r\n                            value={email}\r\n                            onChange={(e)=>{setEmail(e.target.value)}}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"password\">\r\n                        <Form.Label> Password </Form.Label>\r\n                        <Form.Control \r\n                            type=\"password\" \r\n                            placeholder=\"Enter password\" \r\n                            value={password}\r\n                            onChange={(e)=>{setPassword(e.target.value)}}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Button className=\"my-2\" type=\"submit\" variant=\"primary\">\r\n                        Sign In\r\n                    </Button>\r\n                </Form>\r\n\r\n                <Row className=\"py-3\">\r\n                    <Col>\r\n                        New Customer?{'    '}\r\n                        <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}> \r\n                            Register\r\n                        </Link>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </FormContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { userRegister } from '../actions/userAction'\r\n// for flex-box building \r\nimport { Form, Button, Row, Col,Toast } from 'react-bootstrap'\r\n// product cart component\r\nimport FormContainer from '../components/FormContainer'\r\n// redux elems\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n// UI components\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\n\r\nfunction validateEmail(email) { // функция для валидации почты\r\n    const re = /^(([^<>()\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n}\r\n\r\nconst RegisterScreen = ({location, history}) => {\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [name, setName] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n    const [validate, setValidate] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userReg = useSelector( state => state.userRegister )\r\n    const { loading, error, userInfo } = userReg\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect( () => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (validateEmail(email)) {\r\n            dispatch(userRegister(email, password, name))\r\n            \r\n        } else {\r\n            setMessage('Enter correct email')\r\n        }  \r\n    }\r\n\r\n    const emailHandler = (emailValue) => {\r\n        console.log(validateEmail(emailValue))\r\n        setEmail(emailValue)\r\n        if (!validateEmail(emailValue)) {\r\n            setMessage('Enter correct email')\r\n            setValidate(false)\r\n        } else {\r\n            setMessage('')\r\n            setValidate(true)\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <FormContainer>\r\n                <h1 className=\"py-4\"> Sign Up </h1>\r\n                {\r\n                    message && <Message variant=\"danger\">{message}</Message>\r\n                }\r\n                {\r\n                    error && <Message variant=\"danger\">{error}</Message>\r\n                }\r\n                {\r\n                    loading && <Loader>  </Loader>\r\n                }\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId=\"name\">\r\n                        <Form.Label> Name </Form.Label>\r\n                        <Form.Control \r\n                            type=\"name\" \r\n                            placeholder=\"Enter name\" \r\n                            value={name}\r\n                            onChange={(e)=>{setName(e.target.value)}}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"email\">\r\n                        <Form.Label> Email Address </Form.Label>\r\n                        <Form.Control \r\n                            type=\"email\" \r\n                            placeholder=\"Enter email\" \r\n                            value={email}\r\n                            onChange={(e)=>{emailHandler(e.target.value)}}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"password\">\r\n                        <Form.Label> Password </Form.Label>\r\n                        <Form.Control \r\n                            type=\"password\" \r\n                            placeholder=\"Enter password\" \r\n                            value={password}\r\n                            onChange={(e)=>{setPassword(e.target.value)}}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"confirmPassword\">\r\n                        <Form.Label> Confirm Password </Form.Label>\r\n                        <Form.Control \r\n                            type=\"password\" \r\n                            placeholder=\"Confirm password\" \r\n                            value={confirmPassword}\r\n                            onChange={(e)=>{setConfirmPassword(e.target.value)}}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    {\r\n                    (password !== confirmPassword) ? (\r\n                        <div className=\"center my-3\">\r\n                            <Toast style={{\r\n                                position: 'absolute',\r\n                                top: '20px',\r\n                                right: '20px',\r\n                                color: 'red'\r\n                                }}>\r\n                                <Toast.Body>Passwods are not equal</Toast.Body>\r\n                            </Toast>\r\n                        </div>\r\n                     ) : null \r\n                    }\r\n                    <Button disabled={!(confirmPassword === password) || !validate} className=\"my-2\" type=\"submit\" variant=\"primary\">\r\n                        Sign Up\r\n                    </Button>\r\n                </Form>\r\n\r\n                <Row className=\"py-3\">\r\n                    <Col>\r\n                        Already sign up?{'    '}\r\n                        <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}> \r\n                            Login\r\n                        </Link>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </FormContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import axios from 'axios'\r\nimport { CART_RESET } from '../constants/cartConst'\r\nimport {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    \r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_LIST_ADMIN_REQUEST,\r\n    ORDER_LIST_ADMIN_SUCCESS,\r\n    ORDER_LIST_ADMIN_FAIL,\r\n\r\n    ORDER_DELETE_ADMIN_REQUEST,\r\n    ORDER_DELETE_ADMIN_SUCCESS,\r\n    ORDER_DELETE_ADMIN_FAIL,\r\n\r\n    ORDER_UPDATE_ADMIN_REQUEST,\r\n    ORDER_UPDATE_ADMIN_SUCCESS,\r\n    ORDER_UPDATE_ADMIN_FAIL,\r\n\r\n} from '../constants/orderConst'\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        })\r\n    \r\n        const token = getState().userLogin.userInfo.token\r\n        const config = {\r\n            headers: {\r\n                'Content-Type':'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        }\r\n        const { data } = await axios.post(`/api/orders`, order, config)\r\n    \r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n            error.response.data.message :\r\n            error.message\r\n        })\r\n    }\r\n }\r\n\r\n export const getOrderById = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n    \r\n        const token = getState().userLogin.userInfo.token\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        }\r\n        const { data } = await axios.get(`/api/orders/${id}`, config)\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n            error.response.data.message :\r\n            error.message\r\n        })\r\n    }\r\n }\r\n\r\n export const orderPay = (orderId, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        })\r\n    \r\n        const token = getState().userLogin.userInfo.token\r\n        const config = {\r\n            headers: {\r\n                'Content-Type':'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        }\r\n        const { data } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config)\r\n        localStorage.removeItem('cartItems')\r\n        dispatch({\r\n            type: CART_RESET\r\n        })\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n            error.response.data.message :\r\n            error.message\r\n        })\r\n    }\r\n }\r\n\r\n export const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST\r\n        })\r\n    \r\n        const token = getState().userLogin.userInfo.token\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        }\r\n        const { data } = await axios.get(`/api/orders/myorders`, config)\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n            error.response.data.message :\r\n            error.message\r\n        })\r\n    }\r\n }\r\n\r\n export const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_ADMIN_REQUEST\r\n        })\r\n    \r\n        const token = getState().userLogin.userInfo.token\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        }\r\n        const { data } = await axios.get(`/api/orders`, config)\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_ADMIN_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_ADMIN_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n            error.response.data.message :\r\n            error.message\r\n        })\r\n    }\r\n }\r\n\r\n export const updateOrderByAdmin = (order) => async (dispatch, getState) => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: ORDER_UPDATE_ADMIN_REQUEST\r\n        })\r\n    \r\n        const token = getState().userLogin.userInfo.token\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`,\r\n            }\r\n        }\r\n        await axios.put(`/api/orders/${order._id}/deliver`, {}, config)\r\n\r\n        dispatch({\r\n            type: ORDER_UPDATE_ADMIN_SUCCESS,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_UPDATE_ADMIN_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n            error.response.data.message :\r\n            error.message\r\n        })\r\n    }\r\n }\r\n\r\n export const deleteOrderByAdmin = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELETE_ADMIN_REQUEST\r\n        })\r\n    \r\n        const token = getState().userLogin.userInfo.token\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        }\r\n        await axios.delete(`/api/orders/${id}`, config)\r\n\r\n        dispatch({\r\n            type: ORDER_DELETE_ADMIN_SUCCESS,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DELETE_ADMIN_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n            error.response.data.message :\r\n            error.message\r\n        })\r\n    }\r\n }","import React, { useEffect, useState } from 'react'\r\nimport {Helmet} from \"react-helmet\";\r\n// for flex-box building \r\nimport { Form, Button, Row, Col, Toast, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n// redux elems\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n// UI components\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\n// actions\r\nimport { getUserDetails } from '../actions/userAction'\r\nimport { updateUserProfile } from '../actions/userAction'\r\nimport { listMyOrders } from '../actions/orderActions'\r\nimport {ORDER_LIST_RESET} from '../constants/orderConst'\r\nimport {ORDER_DETAILS_RESET} from '../constants/orderConst'\r\n\r\n\r\nfunction validateEmail(email) { // функция для валидации почты\r\n    const re = /^(([^<>()\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n}\r\n\r\nconst ProfileScreen = ({history}) => {\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [name, setName] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n    const [validate, setValidate] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector( state => state.orderList )\r\n    const { loading:loadingOrders, error:errorOrders, orders } = orderList\r\n\r\n    const userDet = useSelector( state => state.userDetails )\r\n    const { loading, error, user } = userDet\r\n\r\n    const userLogin = useSelector( state=>state.userLogin )\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProf= useSelector( state=>state.userUpdate )\r\n    const { success } = userUpdateProf\r\n\r\n    useEffect( () => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if ( typeof(user) === 'undefined' || !user.name  ) {\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setValidate(true)\r\n            }\r\n        }\r\n    }, [dispatch ,history, userInfo, user])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (validateEmail(email)) {\r\n            dispatch(updateUserProfile({ id: user._id, name, email, password }))\r\n        } else {\r\n            setMessage('Enter correct email')\r\n        }  \r\n    }\r\n\r\n    const emailHandler = (emailValue) => {\r\n        console.log(validateEmail(emailValue))\r\n        setEmail(emailValue)\r\n        if (!validateEmail(emailValue)) {\r\n            setMessage('Enter correct email')\r\n            setValidate(false)\r\n        } else {\r\n            setMessage('')\r\n            setValidate(true)\r\n            \r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        \r\n         <Row>\r\n             \r\n            <Helmet>\r\n                <title> Profile | Shoppy </title>\r\n                <meta name=\"description\" content=\"User profile\"/>\r\n                <meta name=\"keywords\" content=\"electronics, buy electronics\"/>\r\n            </Helmet>\r\n\r\n             <Col md={3} className={'py-3'}>\r\n                    <h2> User Profile </h2>\r\n                    {\r\n                        message && <Message variant=\"danger\">{message}</Message>\r\n                    }\r\n                    {\r\n                        error && <Message variant=\"danger\">{error}</Message>\r\n                    }\r\n                    {\r\n                        success && <Message variant=\"success\">Profile Updated</Message>\r\n                    }\r\n                    {\r\n                        loading && <Loader />\r\n                    }\r\n                    <Form onSubmit={submitHandler}>\r\n                        <Form.Group controlId=\"name\">\r\n                            <Form.Label> New Name </Form.Label>\r\n                            <Form.Control \r\n                                type=\"name\" \r\n                                placeholder=\"Enter name\" \r\n                                value={name}\r\n                                onChange={(e)=>{setName(e.target.value)}}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"email\">\r\n                            <Form.Label> New Email Address </Form.Label>\r\n                            <Form.Control \r\n                                type=\"email\" \r\n                                placeholder=\"Enter email\" \r\n                                value={email}\r\n                                onChange={(e)=>{emailHandler(e.target.value)}}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"password\">\r\n                            <Form.Label> New password </Form.Label>\r\n                            <Form.Control \r\n                                type=\"password\" \r\n                                placeholder=\"Enter password\" \r\n                                value={password}\r\n                                onChange={(e)=>{setPassword(e.target.value)}}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"confirmPassword\">\r\n                            <Form.Label> Confirm Password </Form.Label>\r\n                            <Form.Control \r\n                                type=\"password\" \r\n                                placeholder=\"Confirm password\" \r\n                                value={confirmPassword}\r\n                                onChange={(e)=>{setConfirmPassword(e.target.value)}}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        {\r\n                        (password !== confirmPassword) ? (\r\n                            <div className=\"center my-3\">\r\n                                <Toast style={{\r\n                                    position: 'absolute',\r\n                                    top: '20px',\r\n                                    right: '20px',\r\n                                    color: 'red'\r\n                                    }}>\r\n                                    <Toast.Body>Passwods are not equal</Toast.Body>\r\n                                </Toast>\r\n                            </div>\r\n                        ) : null \r\n                        }\r\n                        <Button disabled={!(confirmPassword === password) || !validate} className=\"my-2\" type=\"submit\" variant=\"primary\">\r\n                            Update\r\n                        </Button>\r\n                    </Form>\r\n                \r\n             </Col>\r\n             <Col md={9} className={'py-3'}>\r\n                <h2 style={{paddingLeft:\"50px\"}}> My Orders </h2>\r\n                    {loadingOrders ? <Loader /> : errorOrders ? <Message variant=\"danger\">{error.orders}</Message> :\r\n                    (\r\n                        <Table striped bordered hover responsive className=\"table-sm\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>DATE</th>\r\n                                    <th>TOTAL</th>\r\n                                    <th>PAID</th>\r\n                                    <th>DELIVERED</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {orders.map( order => (\r\n                                    <tr key={order._id}>\r\n                                        <td>\r\n                                            {order._id}\r\n                                        </td>\r\n                                        <td>\r\n                                            {order.createdAt.substring(0, 10)}\r\n                                        </td>\r\n                                        <td>\r\n                                            ${order.totalPrice}\r\n                                        </td>\r\n                                        <td>\r\n                                            {order.isPaid ? order.paidAt.substring(0, 10) :\r\n                                                <i className=\"fa fa-times\" style={{color: 'red'}}>\r\n\r\n                                                </i>                                            \r\n                                            }\r\n                                        </td>\r\n                                        <td>\r\n                                            {order.isDelivered ? order.deliveredAt.substring(0, 10) :\r\n                                                <i className=\"fa fa-times\" style={{color: 'red'}}>\r\n\r\n                                                </i>                                            \r\n                                            }\r\n                                        </td>\r\n                                        <td>\r\n                                           <LinkContainer to={`/orders/${order._id}`}>\r\n                                               <Button variant=\"light\" onClick={dispatch({type: ORDER_DETAILS_RESET})}>\r\n                                                   Details\r\n                                               </Button>\r\n                                           </LinkContainer>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )\r\n                    }\r\n            </Col>\r\n         </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen\r\n","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n    return (\r\n        <Nav className=\"justify-content-center mb-4\">\r\n            <Nav.Item>\r\n                {\r\n                    step1 ? \r\n                    (<LinkContainer to=\"/login\"> \r\n                        <Nav.Link> \r\n                            Sign In\r\n                        </Nav.Link>\r\n                    </LinkContainer>)\r\n                    : \r\n                    (\r\n                    <Nav.Link disabled>\r\n                        Sign In\r\n                    </Nav.Link>\r\n                    )\r\n                    \r\n                }\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {\r\n                    step2 ? \r\n                    (\r\n                    <LinkContainer to=\"/shipping\"> \r\n                        <Nav.Link> \r\n                            Shipping\r\n                        </Nav.Link>\r\n                    </LinkContainer>\r\n                    )\r\n                    : \r\n                    (\r\n                    <Nav.Link disabled>\r\n                        Shipping\r\n                    </Nav.Link>\r\n                    )\r\n                }\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {\r\n                    step3 ? \r\n                    (\r\n                    <LinkContainer to=\"/payment\"> \r\n                        <Nav.Link> \r\n                            Payment\r\n                        </Nav.Link>\r\n                    </LinkContainer>\r\n                    )\r\n                    : \r\n                    (\r\n                    <Nav.Link disabled>\r\n                        Payment\r\n                    </Nav.Link>)\r\n                }\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {\r\n                    step4 ? \r\n                    (\r\n                    <LinkContainer to=\"/placeorder\"> \r\n                        <Nav.Link> \r\n                            Place Order\r\n                        </Nav.Link>\r\n                    </LinkContainer>)\r\n                    : \r\n                    (<Nav.Link disabled>\r\n                        Place Order\r\n                    </Nav.Link>)\r\n                }\r\n            </Nav.Item>\r\n\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, {useState} from 'react'\r\nimport {saveShippingAddress} from '../actions/cartAction'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\n// for flex-box building \r\nimport { Form, Button } from 'react-bootstrap'\r\n// product cart component\r\nimport FormContainer from '../components/FormContainer'\r\n// redux elems\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n \r\nconst ShippingScreen = ({history}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cartList)\r\n    const { shippingAddress } = cart\r\n    \r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n        history.push('/payment')//к текущему url прибавляю какой-либо путь\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 />\r\n            <h1> Shipping </h1>\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId=\"address\">\r\n                        <Form.Label> Address </Form.Label>\r\n                        <Form.Control \r\n                            type=\"text\" \r\n                            placeholder=\"Enter address\" \r\n                            value={address}\r\n                            required\r\n                            onChange={(e)=>{setAddress(e.target.value)}}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"city\">\r\n                        <Form.Label> City </Form.Label>\r\n                        <Form.Control \r\n                            type=\"text\" \r\n                            placeholder=\"Enter city\" \r\n                            value={city}\r\n                            onChange={(e)=>{setCity(e.target.value)}}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"postalCode\">\r\n                        <Form.Label> Country </Form.Label>\r\n                        <Form.Control \r\n                            type=\"text\" \r\n                            placeholder=\"Enter postal code\" \r\n                            value={postalCode}\r\n                            onChange={(e)=>{setPostalCode(e.target.value)}}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"country\">\r\n                        <Form.Label> Postal Code </Form.Label>\r\n                        <Form.Control \r\n                            type=\"text\" \r\n                            placeholder=\"Enter Country\" \r\n                            value={country}\r\n                            onChange={(e)=>{setCountry(e.target.value)}}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Button className=\"my-2\" type=\"submit\" variant=\"primary\">\r\n                        Send\r\n                    </Button>\r\n                </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, {useState} from 'react'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartAction'\r\n// for flex-box building \r\nimport { Form, Button, Col} from 'react-bootstrap'\r\n// product cart component\r\nimport FormContainer from '../components/FormContainer'\r\n// redux elems\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n \r\nconst PaymentScreen = ({history}) => {\r\n\r\n    const cart = useSelector(state => state.cartList)\r\n    const { shippingAddress } = cart\r\n    const dispatch = useDispatch()\r\n    \r\n    if (!shippingAddress) {\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')//к текущему url прибавляю какой-либо путь\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3 />\r\n                <h1> Payment Method </h1>\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId=\"address\">\r\n                        <Form.Label as=\"legend\"> Select Method </Form.Label>\r\n                        <Col>\r\n                            <Form.Check \r\n                                type=\"radio\" \r\n                                label=\"PayPal or Credit Card\"\r\n                                id=\"PayPal\"\r\n                                name=\"paymentMethod\"\r\n                                value='PayPal'\r\n                                checked\r\n                                onChange={(e)=>{setPaymentMethod(e.target.value)}}\r\n                            > \r\n                            </Form.Check>\r\n                            <Form.Check \r\n                                type=\"radio\" \r\n                                label=\"stripe\"\r\n                                id=\"Stripe\"\r\n                                name=\"paymentMethod\"\r\n                                value='Stripe'\r\n                                onChange={(e)=>{setPaymentMethod(e.target.value)}}\r\n                            > \r\n                            </Form.Check>\r\n                        </Col>\r\n\r\n                    </Form.Group>\r\n                   \r\n                    <Button className=\"my-2\" type=\"submit\" variant=\"primary\">\r\n                        Continue\r\n                    </Button>\r\n                </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n","import React, {useEffect} from 'react'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { Link } from 'react-router-dom'\r\n// for flex-box building \r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\n// product cart component\r\nimport {createOrder} from '../actions/orderActions'\r\n// redux elems\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\n\r\nconst PlaceOrderScreen = ({history}) => {\r\n\r\n    const cart = useSelector(state => state.cartList)\r\n    const { shippingAddress, paymentMethod, cartItems } = cart\r\n    const addDecimals = (num) => {\r\n        return (Math.round((num * 100)/100)).toFixed(2)\r\n    }\r\n\r\n    cart.itemsPrice = cartItems.reduce( (accumulator, currentValue) => {\r\n        return accumulator + +currentValue.price*currentValue.qty\r\n    }, 0).toFixed(2)\r\n    cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\r\n    cart.taxPrice = Number((cart.itemsPrice * 0.15).toFixed(2))\r\n    cart.totalPrice = (+cart.shippingPrice + +cart.itemsPrice + +cart.taxPrice).toFixed(2)\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, success, error } = orderCreate\r\n\r\n    useEffect( () => {\r\n        if (success) {\r\n            history.push(`/orders/${order._id}`)\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [history, success])\r\n\r\n    const dispatch = useDispatch()\r\n    const placeOrderHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createOrder({\r\n            orderItems: cartItems,\r\n            shippingAddress: shippingAddress,\r\n            paymentMethod: paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice\r\n        }))\r\n    }\r\n\r\n    return (     \r\n        <>\r\n            <CheckoutSteps step1 step2 step3 step4/>\r\n                Обзор заказа\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant=\"flush\">\r\n                         <ListGroup.Item>\r\n                            <h2>\r\n                                Shipping\r\n                            </h2>\r\n                            <p>\r\n                                <strong> Address: </strong>\r\n                                {shippingAddress.address},\r\n                                {shippingAddress.city},\r\n                                {shippingAddress.postalCode},\r\n                                {shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>\r\n                                Payment Method\r\n                            </h2>\r\n                            <strong> Method: </strong>\r\n                            { paymentMethod }\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>\r\n                                Order Items\r\n                            </h2>\r\n                            { \r\n                                cartItems.length === 0 ? <Message> Your cart is empty </Message>\r\n                                :\r\n                                (\r\n                                    <ListGroup variant=\"flush\">\r\n                                        {\r\n                                            cartItems.map( (item, index) => (\r\n                                                    <ListGroup.Item key={index}>\r\n                                                        <Row>\r\n                                                            <Col md={1}>\r\n                                                                <Image  src={item.image} \r\n                                                                        alt={item.name} \r\n                                                                        fluid \r\n                                                                        rounded\r\n                                                                    />\r\n                                                            </Col>\r\n                                                            <Col>\r\n                                                                <Link to={`/product/${item.product}`}>\r\n                                                                    {item.name}\r\n                                                                </Link>\r\n                                                            </Col>\r\n                                                            <Col md={4}>\r\n                                                                    {+item.qty} x ${+item.price} = {+item.qty * +item.price}\r\n                                                            </Col>\r\n                                                            \r\n                                                        </Row>\r\n                                                    </ListGroup.Item>\r\n                                            ))\r\n                                        }\r\n                                    </ListGroup>\r\n                                )\r\n                            }\r\n                        </ListGroup.Item> \r\n\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                       <ListGroup variant=\"flush\">\r\n                           <ListGroup.Item>\r\n                               <h2> Order Summary </h2>\r\n                           </ListGroup.Item>\r\n                           <ListGroup.Item>\r\n                               <Row>\r\n                                   <Col>\r\n                                        Items\r\n                                   </Col>\r\n                                   <Col>\r\n                                   ${   \r\n                                       cart.itemsPrice \r\n                                    }\r\n                                   </Col>\r\n                               </Row>\r\n                           </ListGroup.Item>\r\n                           <ListGroup.Item>\r\n                               <Row>\r\n                                   <Col>\r\n                                        Shipping\r\n                                   </Col>\r\n                                   <Col>\r\n                                   ${   \r\n                                        cart.shippingPrice\r\n                                    }\r\n                                   </Col>\r\n                               </Row>\r\n                           </ListGroup.Item>\r\n                           <ListGroup.Item>\r\n                               <Row>\r\n                                   <Col>\r\n                                        Tax Price\r\n                                   </Col>\r\n                                   <Col>\r\n                                   ${   \r\n                                        cart.taxPrice\r\n                                    }\r\n                                   </Col>\r\n                               </Row>\r\n                           </ListGroup.Item>\r\n                           <ListGroup.Item>\r\n                               <Row>\r\n                                   <Col>\r\n                                        Total\r\n                                   </Col>\r\n                                   <Col>\r\n                                   ${   \r\n                                        cart.totalPrice\r\n                                    }\r\n                                   </Col>\r\n                               </Row>\r\n                           </ListGroup.Item>\r\n                           \r\n                                    <ListGroup.Item>\r\n                                        {error && <Message variant=\"danger\"> {error} </Message>}\r\n                                    </ListGroup.Item>\r\n                         \r\n                           <ListGroup.Item>\r\n                              <Button \r\n                                    type=\"button\" \r\n                                    className=\"btn-block\" \r\n                                    disabled={cart.cartItems.length === 0}\r\n                                    onClick={(e) => placeOrderHandler(e)}\r\n                                >  \r\n                                Place Order\r\n                              </Button>\r\n                           </ListGroup.Item>\r\n                       </ListGroup> \r\n                    </Card>\r\n                </Col>\r\n\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import React, { useState, useEffect} from 'react'\r\nimport {Helmet} from \"react-helmet\";\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\n// for flex-box building \r\nimport {PayPalButton} from 'react-paypal-button-v2'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\n// redux elems\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderById, orderPay, updateOrderByAdmin } from '../actions/orderActions'\r\nimport { ORDER_LIST_RESET, ORDER_PAY_RESET } from '../constants/orderConst'\r\nimport { ORDER_UPDATE_ADMIN_RESET } from '../constants/orderConst'\r\nimport {listMyOrders} from '../actions/orderActions'\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n\r\n    const orderId = match.params.id\r\n\r\n    const [sdkReady, setSdk] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, loading, error } = orderDetails\r\n\r\n    const orderPays = useSelector(state => state.orderPay)\r\n    const { loading:loadingPay, success:successPay } = orderPays\r\n\r\n    const userStore = useSelector(state => state.userLogin)\r\n    const { userInfo } = userStore\r\n\r\n    const orderUpdateStore = useSelector(state => state.orderUpdate)\r\n    const { loading:loadingUpdate, error:errorUpdate, success:successUpdate } = orderUpdateStore\r\n\r\n    useEffect( () => {\r\n      \r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n        \r\n            const addPayPalScript = async () => {\r\n                const { data:clientId } = await axios.get('/api/config/paypal')\r\n                const script = document.createElement('script')\r\n                script.type = 'text/javascript'\r\n                script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n                script.async = true\r\n                script.onload = () => {\r\n                    setSdk(true)\r\n                }\r\n                document.body.appendChild(script)\r\n            }\r\n            \r\n        if (!order || successPay || successUpdate) {\r\n            dispatch({type: ORDER_LIST_RESET})\r\n            dispatch({ type: ORDER_PAY_RESET})\r\n            dispatch({ type: ORDER_UPDATE_ADMIN_RESET})\r\n            dispatch(listMyOrders())\r\n            dispatch(getOrderById(orderId))\r\n        } else if (!order.isPaid) {\r\n            if (!window.paypal) {\r\n                addPayPalScript()\r\n            } else {\r\n                setSdk(true)\r\n            }\r\n        } \r\n        \r\n    }, [dispatch,orderId, match.params.id, successPay, successUpdate, order, userInfo, history])\r\n\r\n   const successPaymentHandler = (paymentResult) => {\r\n       dispatch(orderPay(orderId, paymentResult))\r\n   }\r\n\r\n   const deliverHandler = (order) => {\r\n       console.log('order ', order)\r\n       dispatch(updateOrderByAdmin(order))\r\n   }\r\n\r\n    return loading ? <Loader/> : error ? <Message variant=\"danger\"> {error} </Message>  : (\r\n        <> \r\n                     \r\n            <Helmet>\r\n                <title> Order | Shoppy </title>\r\n                <meta name=\"description\" content=\"Order\"/>\r\n                <meta name=\"keywords\" content=\"electronics, buy electronics\"/>\r\n            </Helmet>    \r\n       <h1>\r\n           Order {order._id}\r\n       </h1>\r\n       <Link to={`/admin/orderlist`} className=\"btn btn-light my-3\">\r\n              Go back\r\n        </Link>\r\n        <Row>\r\n        <Col md={8}>\r\n            <ListGroup variant=\"flush\">\r\n                 <ListGroup.Item>\r\n                    <h2>\r\n                        Shipping\r\n                    </h2>\r\n                    <p><strong> Name: </strong> {order.user.name}</p>\r\n                    <p><strong> Email: </strong> <a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n                    <p>\r\n                        <strong> Address: </strong>\r\n                        {order.shippingAddress.address},\r\n                        {order.shippingAddress.city},\r\n                        {order.shippingAddress.postalCode},\r\n                        {order.shippingAddress.country}\r\n                    </p>\r\n                   \r\n                    {\r\n                        order.isDelivered ? <Message variant=\"success\"> Delivered on {order.deliveredAt} </Message> : \r\n                        <Message variant=\"danger\"> It wasn't delivered </Message>\r\n                    } \r\n                   \r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                    <h2>\r\n                        Payment Method\r\n                    </h2>\r\n                    <p> <strong className=\"py-4\"> Method: </strong>\r\n                    { order.paymentMethod }</p>\r\n                    \r\n                    {\r\n                        order.isPaid ? <Message variant=\"success\"> Paid on {order.paidAt} </Message> : \r\n                        <Message variant=\"danger\"> Not Paid </Message>\r\n                    } \r\n                   \r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                    <h2>Order Items</h2>\r\n                    { \r\n                        order.orderItems.length === 0 ? \r\n                        <Message> Order is empty </Message>\r\n                        :\r\n                        (\r\n                            <ListGroup variant=\"flush\">\r\n                                {\r\n                                    order.orderItems.map( (item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image  \r\n                                                         src={item.image} \r\n                                                         alt={item.name} \r\n                                                         fluid \r\n                                                         rounded\r\n                                                         />\r\n                                                 </Col>\r\n                                                 <Col>\r\n                                                     <Link to={`/product/${item.product}`}>\r\n                                                         {item.name}\r\n                                                    </Link>\r\n                                                 </Col>\r\n                                                 <Col md={4}>\r\n                                                         {+item.qty} x ${+item.price} = {+item.qty * +item.price}\r\n                                                 </Col>\r\n                                                    \r\n                                             </Row>\r\n                                          </ListGroup.Item>\r\n                                    ))\r\n                                }\r\n                            </ListGroup>\r\n                        )\r\n                    }\r\n                </ListGroup.Item> \r\n\r\n            </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n            <Card>\r\n               <ListGroup variant=\"flush\">\r\n                   <ListGroup.Item>\r\n                       <h2> Order Summary </h2>\r\n                   </ListGroup.Item>\r\n                   <ListGroup.Item>\r\n                       <Row>\r\n                           <Col>\r\n                                Items\r\n                           </Col>\r\n                           <Col>\r\n                           ${   \r\n                               order.itemsPrice \r\n                            }\r\n                           </Col>\r\n                       </Row>\r\n                   </ListGroup.Item>\r\n                   <ListGroup.Item>\r\n                       <Row>\r\n                           <Col>\r\n                                Shipping\r\n                           </Col>\r\n                           <Col>\r\n                           ${   \r\n                                order.shippingPrice\r\n                            }\r\n                           </Col>\r\n                       </Row>\r\n                   </ListGroup.Item>\r\n                   <ListGroup.Item>\r\n                       <Row>\r\n                           <Col>\r\n                                Tax Price\r\n                           </Col>\r\n                           <Col>\r\n                           ${  \r\n                                order.taxPrice\r\n                            }\r\n                           </Col>\r\n                       </Row>\r\n                   </ListGroup.Item>\r\n                   <ListGroup.Item>\r\n                       <Row>\r\n                           <Col>\r\n                                Total\r\n                           </Col>\r\n                           <Col>\r\n                           ${   \r\n                                order.totalPrice\r\n                            }\r\n                           </Col>\r\n                       </Row>\r\n                   </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            { loadingPay && <Loader /> }\r\n                            {\r\n                                (!sdkReady) ? (\r\n                                    <p>Already paid</p>\r\n                                ) : (\r\n                                    <PayPalButton \r\n                                        amount={order.totalPrice}\r\n                                        onSuccess={successPaymentHandler}\r\n                                    />\r\n                                )\r\n                            }\r\n                        </ListGroup.Item>\r\n                        {loadingUpdate && <Loader/>}\r\n                        {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                            <ListGroup.Item>\r\n                                <Button \r\n                                    type=\"button\" \r\n                                    className=\"btn btn-block\" \r\n                                    onClick={() => deliverHandler(order)}\r\n                                    >\r\n                                        Mark As Delivered\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        ) }\r\n               </ListGroup> \r\n            </Card>\r\n        </Col>\r\n\r\n    </Row>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default OrderScreen\r\n","import React, {useEffect} from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n// for flex-box building \r\nimport { Table, Button } from 'react-bootstrap'\r\n// redux elems\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n// UI components\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\n// action to get all users\r\nimport { listUsers } from '../actions/userAction'\r\nimport { deleteUser } from '../actions/userAction'\r\n\r\nconst UserListScreen = ({ history }) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const usersList = useSelector(state => state.userList)\r\n    const { loading, error, users } = usersList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userDelete = useSelector(state => state.deleteUser)\r\n    const { success:successDelete } = userDelete\r\n\r\n    useEffect( () => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listUsers())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n    }, [dispatch, history, successDelete, userInfo])\r\n    \r\n    const deleteHandler = (id) => {\r\n        if(window.confirm('Are you sure')){\r\n            dispatch(deleteUser(id))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1> Users </h1>\r\n            {\r\n                loading ? <Loader/> : error ? <Message variant=\"danger\"> {error} </Message>\r\n                \r\n                : (\r\n                    <Table striped bordered hover>\r\n                        <thead>\r\n                            <tr>\r\n                                <th> ID </th>\r\n                                <th> NAME </th>\r\n                                <th> EMAIL </th>\r\n                                <th> ADMIN </th>\r\n                                <th>  </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                users.map( (user) => (\r\n                                    <tr key={user._id}>\r\n                                        <td> {user._id} </td>\r\n                                        <td> {user.name} </td>\r\n                                        <td> <a href={`mailto:${user.emil}`}>{user.email}</a> </td>\r\n                                        <td> {\r\n                                                user.isAdmin ? \r\n                                                <i style={{color: 'green'}} className=\"fas fa-check\"></i> \r\n                                                : <i style={{color: 'red'}} className=\"fas fa-check\"></i>\r\n                                            } \r\n                                        </td>\r\n                                        <td>\r\n                                            <LinkContainer to={`/admin/users/${user._id}/edit`}>\r\n                                                <Button variant=\"light\" className=\"btn-sm\">\r\n                                                    <i className=\"fas fa-edit\">\r\n                                                    </i>\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n                                            <Button \r\n                                                variant=\"danger\" \r\n                                                className=\"btn-sm\" \r\n                                                onClick={() => deleteHandler(user._id)}>\r\n                                                    <i className=\"fas fa-trash\">\r\n                                                    </i>\r\n                                            </Button>    \r\n                                        </td>\r\n                                     </tr>\r\n                                 ) )\r\n                            }\r\n                        </tbody>\r\n                    </Table>\r\n                )\r\n            }\r\n           \r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserListScreen\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { getUserDetails, updateUserByAdmin } from '../actions/userAction'\r\nimport { USER_UPDATE_ADMIN_RESET } from '../constants/userConst'\r\n// for flex-box building \r\nimport { Form, Button } from 'react-bootstrap'\r\n// product cart component\r\nimport FormContainer from '../components/FormContainer'\r\n// redux elems\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n// UI components\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\n\r\nconst UserEditScreen = ({match, history}) => {\r\n\r\n    const userId = match.params.id\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const userDetails = useSelector( state => state.userDetails )\r\n    const { loading, error, user } = userDetails\r\n\r\n    const userUpdate = useSelector( state => state.updateUserByAdmin )\r\n    const { loading:loadingUpdate, error:errorUpdate, success:successUpdate } = userUpdate\r\n\r\n    useEffect( () => {\r\n        if (successUpdate) {\r\n            dispatch({type: USER_UPDATE_ADMIN_RESET})\r\n            history.push('/admin/userlist')\r\n        } else {\r\n            if (!user.name || user._id !== userId) {\r\n                dispatch(getUserDetails(userId))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n        }\r\n    }, [dispatch, history ,user, userId, successUpdate] )\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUserByAdmin({_id: userId, name, email, isAdmin }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n          <Link to={`/admin/userlist`} className=\"btn btn-light my-3\">\r\n              Go back\r\n          </Link>\r\n          <FormContainer>\r\n              {\r\n                  loadingUpdate ? <Loader/> : errorUpdate ? <Message variant=\"danger\">{errorUpdate}</Message> : null\r\n              }\r\n            {   \r\n                loading \r\n                ? \r\n                <Loader></Loader> \r\n                : \r\n                error \r\n                ? \r\n                <Message variant=\"danger\"> {error} </Message> \r\n                :\r\n               (\r\n                <>\r\n                <h1> Edit User </h1>\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId=\"name\">\r\n                        <Form.Label> Name </Form.Label>\r\n                        <Form.Control \r\n                            type=\"name\" \r\n                            placeholder=\"Enter name\" \r\n                            value={name}\r\n                            onChange={(e)=>{setName(e.target.value)}}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"email\">\r\n                        <Form.Label> Email Address </Form.Label>\r\n                        <Form.Control \r\n                            type=\"email\" \r\n                            placeholder=\"Enter email\" \r\n                            value={email}\r\n                            onChange={(e)=>{setEmail(e.target.value)}}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"isadmin\">\r\n                        <Form.Check \r\n                            type=\"checkbox\" \r\n                            label =\"Is Admin\" \r\n                            checked={isAdmin}\r\n                            onChange={(e)=>{setIsAdmin(e.target.checked)}}\r\n                        >\r\n                        </Form.Check>\r\n                    </Form.Group>\r\n                    <Button className=\"my-2\" type=\"submit\" variant=\"primary\">\r\n                        Update\r\n                    </Button>\r\n                </Form>\r\n                </>\r\n               )\r\n            }\r\n            </FormContainer>  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserEditScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport {Helmet} from \"react-helmet\";\r\n// for flex-box building \r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\n// redux elems\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n// UI components\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\n// action functions\r\nimport { listProducts } from '../actions/productAction'\r\nimport { deleteProductByAdmin } from '../actions/productAction'\r\nimport { createProductByAdmin } from '../actions/productAction'\r\nimport { PRODUCT_CREATE_ADMIN_RESET } from '../constants/productConst'\r\nimport Paginate from '../components/Paginate'\r\n\r\nconst ProductListScreen = ({ history, match }) => {\r\n\r\n    const pageNumber = match.params.pageNumber || 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products, page, pages } = productList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const productDeleteStore = useSelector(state => state.deleteProduct)\r\n    const {\r\n        loading: deleteLoading,\r\n        success: deleteSuccess,\r\n        error: deleteError\r\n    } = productDeleteStore\r\n\r\n    const createProductStore = useSelector(state => state.productCreate)\r\n    const {\r\n        loading: createLoading,\r\n        success: createSuccess,\r\n        error: createError,\r\n        product: createdProduct\r\n    } = createProductStore\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: PRODUCT_CREATE_ADMIN_RESET })\r\n\r\n        if (!userInfo.isAdmin) {\r\n            history.push('/login')\r\n        }\r\n        if (createSuccess) {\r\n            history.push(`/admin/products/${createdProduct._id}/edit`)\r\n        } else {\r\n            dispatch(listProducts('', '', pageNumber))\r\n        }\r\n\r\n    }, [dispatch, history, userInfo, deleteSuccess, createSuccess, createdProduct, pageNumber])\r\n\r\n    const deleteHandler = (id) => {\r\n        if (window.confirm('Are you sure')) {\r\n            dispatch(deleteProductByAdmin(id))\r\n        }\r\n    }\r\n\r\n    const createProductHandler = () => {\r\n        dispatch(createProductByAdmin())\r\n    }\r\n\r\n    return (\r\n        <>\r\n      \r\n          <Helmet>\r\n                <title> Admin Product List | Shoppy </title>\r\n                <meta name=\"description\" content=\"Admin Product List\"/>\r\n                <meta name=\"keywords\" content=\"electronics, buy electronics\"/>\r\n            </Helmet>\r\n            <Row>\r\n                <Col className=\"align-items-center\">\r\n                    <h1> Products </h1>\r\n                </Col>\r\n                <Col className=\"text-right\">\r\n                    <Button className=\"my-3\" onClick={() => createProductHandler()}>\r\n                        Create\r\n                        </Button>\r\n                </Col>\r\n            </Row>\r\n            { createLoading ? <Loader /> : createError ? <Message variant=\"danger\"> {createError} </Message> : null}\r\n            { deleteLoading ? <Loader /> : deleteError ? <Message variant=\"danger\"> {deleteError} </Message> : null}\r\n            {\r\n                loading ? <Loader /> : error ? <Message variant=\"danger\"> {error} </Message>\r\n\r\n                    : (\r\n                        <>\r\n                            <Table striped bordered hover>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th> ID </th>\r\n                                        <th> NAME </th>\r\n                                        <th> PRICE </th>\r\n                                        <th> CATEGORY </th>\r\n                                        <th> CATEGORY </th>\r\n                                        <th> BRAND </th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        products.map((product) => (\r\n                                            <tr key={product._id}>\r\n                                                <td> {product._id} </td>\r\n                                                <td> {product.name} </td>\r\n                                                <td> ${product.price} </td>\r\n                                                <td> {product.category}</td>\r\n                                                <td> {product.brand} </td>\r\n                                                <td>\r\n                                                    <LinkContainer to={`/admin/products/${product._id}/edit`}>\r\n                                                        <Button variant=\"light\" className=\"btn-sm\">\r\n                                                            <i className=\"fas fa-edit\">\r\n                                                            </i>\r\n                                                        </Button>\r\n                                                    </LinkContainer>\r\n                                                    <Button\r\n                                                        variant=\"danger\"\r\n                                                        className=\"btn-sm\"\r\n                                                        onClick={() => deleteHandler(product._id)}>\r\n                                                        <i className=\"fas fa-trash\">\r\n                                                        </i>\r\n                                                    </Button>\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))\r\n                                    }\r\n                                </tbody>\r\n                            </Table>\r\n                            <Paginate pages={pages} page={page} isAdmin={true}></Paginate>\r\n                        </>\r\n                    )\r\n            }\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductListScreen","import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n// for flex-box building \r\nimport { Form, Button } from 'react-bootstrap'\r\n// product cart component \r\nimport FormContainer from '../components/FormContainer'\r\n// redux elems\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n// UI components\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\n// actions\r\nimport { detailsProduct } from '../actions/detailsAction'\r\nimport { updateProductByAdmin } from '../actions/productAction'\r\nimport { PRODUCT_UPDATE_ADMIN_RESET } from '../constants/productConst'\r\n\r\nconst UserEditScreen = ({match, history}) => {\r\n\r\n    const productId = match.params.id\r\n    const dispatch = useDispatch()\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const productDetails = useSelector( state => state.details )\r\n    const { loading, error, product } = productDetails\r\n\r\n    const productUpdate = useSelector( state => state.updateProduct )\r\n    const { \r\n        loading:updateLoading, \r\n        error:updateError, \r\n        success:successUpdate \r\n    } = productUpdate\r\n\r\n    useEffect( () => {\r\n        if (successUpdate) {\r\n            dispatch({ type: PRODUCT_UPDATE_ADMIN_RESET })\r\n            history.push(`/admin/productlist`)\r\n        } else {\r\n            if (!product.name || product._id !== productId) {\r\n                dispatch(detailsProduct(productId))\r\n            } else {\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setImage(product.image)\r\n                setBrand(product.brand)\r\n                setCategory(product.category)\r\n                setCountInStock(product.countInStock)\r\n                setDescription(product.description)\r\n            }\r\n        }\r\n      \r\n    }, [dispatch, history , productId, product, successUpdate] )\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        const updateProduct = {\r\n            _id: productId,\r\n            name,\r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            countInStock,\r\n            description,\r\n        }\r\n        dispatch(updateProductByAdmin(updateProduct))\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        \r\n        const formData = new FormData()\r\n        formData.append('image', file)\r\n        setUploading(true)\r\n        console.log('e.target.files ', e.target.files)\r\n        console.log('file', file)\r\n        console.log('formdata ', formData)\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type':'multipart/form-data'\r\n                }\r\n            }\r\n            const {data} = await axios.post('/api/upload', formData, config) //?? proxy ??\r\n            console.log('posted data ', data)\r\n            setImage(data)\r\n            setUploading(false)\r\n        } catch(error) {\r\n            console.log(error)\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n          <Link to={`/admin/productlist`} className=\"btn btn-light my-3\">\r\n              Go back\r\n          </Link>\r\n          <FormContainer>\r\n              <h1> Edit Product </h1>\r\n              {updateLoading && <Loader/>}\r\n              {updateError && <Message variant=\"danger\"> {updateError} </Message>}\r\n            {   \r\n                loading \r\n                ? \r\n                <Loader></Loader> \r\n                : \r\n                error \r\n                ? \r\n                <Message variant=\"danger\"> {error} </Message> \r\n                :\r\n               (\r\n                <>\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId=\"name\">\r\n                        <Form.Label> Name </Form.Label>\r\n                        <Form.Control \r\n                            type=\"name\" \r\n                            placeholder=\"Enter name\" \r\n                            value={name}\r\n                            onChange={(e)=>{setName(e.target.value)}}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"price\">\r\n                        <Form.Label> Price </Form.Label>\r\n                        <Form.Control \r\n                            type=\"number\" \r\n                            placeholder=\"Enter price\" \r\n                            value={price}\r\n                            onChange={(e)=>{setPrice(e.target.value)}}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"image\">\r\n                        <Form.Label> Image </Form.Label>\r\n                        <Form.Control \r\n                            type=\"text\" \r\n                            placeholder=\"Enter image url\" \r\n                            value={image}\r\n                            onChange={(e)=>{setImage(e.target.value)}}\r\n                        >\r\n                        </Form.Control>\r\n                        <Form.File id=\"image-file\" label=\"Choose File\" custom \r\n                            onChange={uploadFileHandler}\r\n                        >\r\n                        </Form.File>\r\n                        { uploading && <Loader/> }\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"brand\">\r\n                        <Form.Label> Brand </Form.Label>\r\n                        <Form.Control \r\n                            type=\"text\" \r\n                            placeholder=\"Enter brand\" \r\n                            value={brand}\r\n                            onChange={(e)=>{setBrand(e.target.value)}}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"category\">\r\n                        <Form.Label> Category </Form.Label>\r\n                        <Form.Control \r\n                            type=\"text\" \r\n                            placeholder=\"Enter category\" \r\n                            value={category}\r\n                            onChange={(e)=>{setCategory(e.target.value)}}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"countInStock\">\r\n                        <Form.Label> CountInStock </Form.Label>\r\n                        <Form.Control \r\n                            type=\"text\" \r\n                            placeholder=\"Enter a countInStock\" \r\n                            value={countInStock}\r\n                            onChange={(e)=>{setCountInStock(e.target.value)}}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"description\">\r\n                        <Form.Label> Description </Form.Label>\r\n                        <Form.Control \r\n                            type=\"text\" \r\n                            placeholder=\"Enter description\" \r\n                            value={description}\r\n                            onChange={(e)=>{setDescription(e.target.value)}}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Button className=\"my-2\" type=\"submit\" variant=\"primary\">\r\n                        Update\r\n                    </Button>\r\n                </Form>\r\n                </>\r\n               )\r\n            }\r\n            </FormContainer>  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserEditScreen","import React, {useEffect} from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n// for flex-box building \r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\n// redux elems\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n// UI components\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\n// action functions\r\nimport { listOrders } from '../actions/orderActions'\r\nimport { deleteOrderByAdmin } from '../actions/orderActions'\r\n// import { createOrderByAdmin } from '../actions/productAction'\r\n// import { ORDER_CREATE_ADMIN_RESET } from '../constants/productConst'\r\n\r\nconst OrderListScreen = ({ history }) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector(state => state.orderAllList)\r\n    const { loading, error, orders } = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const orderDelete = useSelector(state => state.orderDelete)\r\n    const { loading:loadingError, error:deleteError, success:deleteSuccess } = orderDelete\r\n\r\n    // const deleteOrderStore = useSelector(state => state.deleteProduct)\r\n    // const { \r\n    //     loading:deleteLoading, \r\n    //     success:deleteSuccess, \r\n    //     error:deleteError \r\n    // } = deleteOrderStore\r\n\r\n    // const createOrderStore = useSelector(state => state.productCreate)\r\n    // const { \r\n    //     loading:createLoading, \r\n    //     success:createSuccess, \r\n    //     error:createError, \r\n    //     product:createdProduct \r\n    // } = createProductStore\r\n    \r\n    useEffect( () => {\r\n\r\n        if (!userInfo || !userInfo.isAdmin) {\r\n            history.push('/login')\r\n        }\r\n        dispatch(listOrders())\r\n\r\n    }, [dispatch, history, userInfo, deleteSuccess])\r\n    \r\n    const deleteHandler = (id) => {\r\n        if(window.confirm('Are you sure')){\r\n            dispatch(deleteOrderByAdmin(id))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col className=\"align-items-center\">\r\n                    <h1> Products </h1>\r\n                </Col>\r\n            </Row>\r\n            {/* { createLoading ? <Loader/> : createError ? <Message variant=\"danger\"> {createError} </Message> : null }\r\n            { deleteLoading ? <Loader/> : deleteError ? <Message variant=\"danger\"> {deleteError} </Message> : null} */}\r\n            {\r\n                loading ? <Loader/> : error ? <Message variant=\"danger\"> {error} </Message>\r\n                \r\n                : (orders.length !== 0) ? (\r\n                    <Table striped bordered hover responsive >\r\n                        <thead>\r\n                            <tr>\r\n                                <th> ID </th>\r\n                                <th> USER NAME </th>\r\n                                <th> IS PAID</th>\r\n                                <th> IS DELIVERED </th>\r\n                                <th> PAYMENT METHOD </th>\r\n                                <th>  </th>\r\n                                <th>  </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                orders.map( (order) => (\r\n                                    <tr key={order._id}>\r\n                                        <td> {order.user._id} </td>\r\n                                        <td> {order.user.name} </td>\r\n                                        <td> {order.isPaid  \r\n                                        ? <i className=\"fas fa-check\" style={{color:'green'}}></i> \r\n                                        : <i className=\"fas fa-times\" style={{color:'red'}}></i>} </td>\r\n                                        <td> {order.isDelivered \r\n                                        ? <i className=\"fas fa-check\" style={{color:'green'}}></i> \r\n                                        : <i className=\"fas fa-times\" style={{color:'red'}}></i>} </td>\r\n                                        <td> {order.paymentMethod} </td>\r\n\r\n                                        <td>\r\n                                            <LinkContainer to={`/admin/orders/${order._id}/edit`}>\r\n                                                <Button variant=\"light\" className=\"btn-sm\">\r\n                                                    Details\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n                                        </td>\r\n                                        <td>\r\n                                            <Button \r\n                                                variant=\"danger\" \r\n                                                className=\"btn-sm\" \r\n                                                onClick={() => deleteHandler(order._id)}>\r\n                                                    <i className=\"fas fa-trash\">\r\n                                                    </i>\r\n                                            </Button>    \r\n                                        </td>\r\n                                     </tr>\r\n                                 ) )\r\n                            }\r\n                        </tbody>\r\n                    </Table>\r\n                ) : <h3 style={{textAlign:'center'}}> No orders</h3>\r\n            }\r\n           \r\n        </>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen","import React, { useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\n// for flex-box building \r\nimport {PayPalButton} from 'react-paypal-button-v2'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\n// redux elems\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderById, orderPay, updateOrderByAdmin } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET } from '../constants/orderConst'\r\nimport { ORDER_UPDATE_ADMIN_RESET } from '../constants/orderConst'\r\n\r\nconst OrderScreen = (props) => {\r\n\r\n    const orderId = props.match.params.id\r\n\r\n    const [sdkReady, setSdk] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, loading, error } = orderDetails\r\n\r\n    const orderPays = useSelector(state => state.orderPay)\r\n    const { loading:loadingPay, success:successPay } = orderPays\r\n\r\n    const userStore = useSelector(state => state.userLogin)\r\n    const { userInfo } = userStore\r\n\r\n    const orderUpdateStore = useSelector(state => state.orderUpdate)\r\n    const { loading:loadingUpdate, error:errorUpdate, success:successUpdate } = orderUpdateStore\r\n\r\n    useEffect( () => {\r\n\r\n        if (!userInfo) {\r\n            props.history.push('/login')\r\n        }\r\n        \r\n            const addPayPalScript = async () => {\r\n                const { data:clientId } = await axios.get('/api/config/paypal')\r\n                const script = document.createElement('script')\r\n                script.type = 'text/javascript'\r\n                script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n                script.async = true\r\n                script.onload = () => {\r\n                    setSdk(true)\r\n                }\r\n                document.body.appendChild(script)\r\n            }\r\n            \r\n        if (!order || successPay || successUpdate) {\r\n            dispatch({ type: ORDER_PAY_RESET})\r\n            dispatch({ type: ORDER_UPDATE_ADMIN_RESET})\r\n            dispatch(getOrderById(orderId))\r\n        } else if (!order.isPaid) {\r\n            if (!window.paypal) {\r\n                addPayPalScript()\r\n            } else {\r\n                setSdk(true)\r\n            }\r\n        } \r\n        \r\n    }, [dispatch, props.match.params.id, orderId, successPay, successUpdate, order, userInfo, props.history])\r\n\r\n   const successPaymentHandler = (paymentResult) => {\r\n       dispatch(orderPay(orderId, paymentResult))\r\n   }\r\n\r\n   const deliverHandler = (order) => {\r\n       console.log('order ', order)\r\n       dispatch(updateOrderByAdmin(order))\r\n   }\r\n\r\n    return loading ? <Loader/> : error ? <Message variant=\"danger\"> {error} </Message>  : (\r\n        <>     \r\n       <h1>\r\n           Order {order._id}\r\n       </h1>\r\n       <Link to={`/admin/orderlist`} className=\"btn btn-light my-3\">\r\n              Go back\r\n        </Link>\r\n        <Row>\r\n        <Col md={8}>\r\n            <ListGroup variant=\"flush\">\r\n                 <ListGroup.Item>\r\n                    <h2>\r\n                        Shipping\r\n                    </h2>\r\n                    <p><strong> Name: </strong> {order.user.name}</p>\r\n                    <p><strong> Email: </strong> <a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n                    <p>\r\n                        <strong> Address: </strong>\r\n                        {order.shippingAddress.address},\r\n                        {order.shippingAddress.city},\r\n                        {order.shippingAddress.postalCode},\r\n                        {order.shippingAddress.country}\r\n                    </p>\r\n                   \r\n                    {\r\n                        order.isDelivered ? <Message variant=\"success\"> Delivered on {order.deliveredAt} </Message> : \r\n                        <Message variant=\"danger\"> It wasn't delivered </Message>\r\n                    } \r\n                   \r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                    <h2>\r\n                        Payment Method\r\n                    </h2>\r\n                    <p> <strong className=\"py-4\"> Method: </strong>\r\n                    { order.paymentMethod }</p>\r\n                    \r\n                    {\r\n                        order.isPaid ? <Message variant=\"success\"> Paid on {order.paidAt} </Message> : \r\n                        <Message variant=\"danger\"> Not Paid </Message>\r\n                    } \r\n                   \r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                    <h2>Order Items</h2>\r\n                    { \r\n                        order.orderItems.length === 0 ? \r\n                        <Message> Order is empty </Message>\r\n                        :\r\n                        (\r\n                            <ListGroup variant=\"flush\">\r\n                                {\r\n                                    order.orderItems.map( (item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image  \r\n                                                         src={item.image} \r\n                                                         alt={item.name} \r\n                                                         fluid \r\n                                                         rounded\r\n                                                         />\r\n                                                 </Col>\r\n                                                 <Col>\r\n                                                     <Link to={`/product/${item.product}`}>\r\n                                                         {item.name}\r\n                                                    </Link>\r\n                                                 </Col>\r\n                                                 <Col md={4}>\r\n                                                         {+item.qty} x ${+item.price} = {+item.qty * +item.price}\r\n                                                 </Col>\r\n                                                    \r\n                                             </Row>\r\n                                          </ListGroup.Item>\r\n                                    ))\r\n                                }\r\n                            </ListGroup>\r\n                        )\r\n                    }\r\n                </ListGroup.Item> \r\n\r\n            </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n            <Card>\r\n               <ListGroup variant=\"flush\">\r\n                   <ListGroup.Item>\r\n                       <h2> Order Summary </h2>\r\n                   </ListGroup.Item>\r\n                   <ListGroup.Item>\r\n                       <Row>\r\n                           <Col>\r\n                                Items\r\n                           </Col>\r\n                           <Col>\r\n                           ${   \r\n                               order.itemsPrice \r\n                            }\r\n                           </Col>\r\n                       </Row>\r\n                   </ListGroup.Item>\r\n                   <ListGroup.Item>\r\n                       <Row>\r\n                           <Col>\r\n                                Shipping\r\n                           </Col>\r\n                           <Col>\r\n                           ${   \r\n                                order.shippingPrice\r\n                            }\r\n                           </Col>\r\n                       </Row>\r\n                   </ListGroup.Item>\r\n                   <ListGroup.Item>\r\n                       <Row>\r\n                           <Col>\r\n                                Tax Price\r\n                           </Col>\r\n                           <Col>\r\n                           ${  \r\n                                order.taxPrice\r\n                            }\r\n                           </Col>\r\n                       </Row>\r\n                   </ListGroup.Item>\r\n                   <ListGroup.Item>\r\n                       <Row>\r\n                           <Col>\r\n                                Total\r\n                           </Col>\r\n                           <Col>\r\n                           ${   \r\n                                order.totalPrice\r\n                            }\r\n                           </Col>\r\n                       </Row>\r\n                   </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            { loadingPay && <Loader /> }\r\n                            {\r\n                                (!sdkReady) ? (\r\n                                    <p>Already paid</p>\r\n                                ) : (\r\n                                    <PayPalButton \r\n                                        amount={order.totalPrice}\r\n                                        onSuccess={successPaymentHandler}\r\n                                    />\r\n                                )\r\n                            }\r\n                        </ListGroup.Item>\r\n                        {loadingUpdate && <Loader/>}\r\n                        {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                            <ListGroup.Item>\r\n                                <Button \r\n                                    type=\"button\" \r\n                                    className=\"btn btn-block\" \r\n                                    onClick={() => deliverHandler(order)}\r\n                                    >\r\n                                        Mark As Delivered\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        ) }\r\n               </ListGroup> \r\n            </Card>\r\n        </Col>\r\n\r\n    </Row>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default OrderScreen","import React from 'react';\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport { Container } from 'react-bootstrap'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n// screens\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport ShippingScreen from './screens/ShippingScreen';\nimport PaymentScreen from './screens/PaymentScreen'; \nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\nimport OrderListScreen from './screens/OrderListScreen'\nimport OrderAdminScreen from './screens/OrderAdminScreen'\n\nfunction App() {\n  return (\n    <Router>\n      <Header/>\n        <main className=\"py-3\">\n          <Container>\n            {/* user routes */}\n            <Route path=\"/orders/:id\" component={OrderScreen} />\n            <Route path=\"/placeorder\" component={PlaceOrderScreen} />\n            <Route path=\"/payment\" component={PaymentScreen} />\n            <Route path=\"/shipping\" component={ShippingScreen} />\n            <Route path=\"/profile\" component={ProfileScreen} />\n            <Route path=\"/login\" component={LoginScreen} />\n            <Route path=\"/register\" component={RegisterScreen} />\n            <Route path=\"/product/:id\" component={ProductScreen} />\n            <Route path=\"/cart/:id?\" component={CartScreen} />\n            {/* admin routes */}\n            <Route path=\"/admin/orders/:id/edit\" component={OrderAdminScreen} />\n            <Route path=\"/admin/orderlist\" component={OrderListScreen} />\n            <Route path=\"/admin/users/:id/edit\" component={UserEditScreen} />\n            <Route path=\"/admin/products/:id/edit\" component={ProductEditScreen} />\n            <Route path=\"/admin/userlist\" component={UserListScreen} />\n            <Route path=\"/admin/productlist\" component={ProductListScreen} exact />\n            <Route \n              path=\"/admin/productlist/:pageNumber\" \n              component={ProductListScreen} exact\n            />\n            {/* Home screen */}\n            <Route path=\"/\" component={HomeScreen} exact/>\n            {/* Searched home screen */}\n            <Route path=\"/search/:keyword\" component={HomeScreen}/>\n            {/* Brands */}\n            <Route path=\"/brand/:brand\" component={HomeScreen}/>\n            {/* Pagination */}\n            <Route path=\"/page/:pageNumber\" component={HomeScreen} exact/>\n            <Route \n              path=\"/search/:keyword/page/:pageNumber\" \n              component={HomeScreen}\n              exact\n            />\n          </Container>\n        </main>\n      <Footer/>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n     createStore, combineReducers, applyMiddleware \r\n} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\n\r\nimport { detailsPeducer } from './reducers/detailsReducer.js'\r\nimport { productListPeducer } from './reducers/productReducer'\r\nimport { cartReducer } from './reducers/cartReducer'\r\nimport { userLoginPeducer } from './reducers/userReducer'\r\nimport { userRegisterPeducer } from './reducers/userReducer'\r\nimport { userDetailsReducer } from './reducers/userReducer'\r\nimport { userUpdateProfileReducer } from './reducers/userReducer'\r\nimport { orderCreateReducer } from './reducers/orderReducer'\r\nimport { orderDetailsReducer } from './reducers/orderReducer'\r\nimport { orderPayReducer } from './reducers/orderReducer'\r\nimport { orderListReducer } from './reducers/orderReducer'\r\nimport { userListReducer } from './reducers/userReducer'\r\nimport { deleteUserReducer } from './reducers/userReducer'\r\nimport { updateUserByAdminReducer } from './reducers/userReducer'\r\n\r\nimport { productDeletePeducer } from './reducers/productReducer'\r\nimport { productCreatePeducer, productTopListPeducer } from './reducers/productReducer'\r\nimport { productUpdatePeducer, productCreateReviewReducer, productUpdateReviewReducer } from './reducers/productReducer'\r\n\r\nimport { adminOrderListReducer, adminOrderUpdateReducer, adminOrderDeleteReducer } from './reducers/orderReducer'\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListPeducer,\r\n    details: detailsPeducer,\r\n    cartList: cartReducer,\r\n    productReview: productCreateReviewReducer,\r\n    productTop: productTopListPeducer,\r\n    productReviewUpdate: productUpdateReviewReducer,\r\n\r\n    userLogin: userLoginPeducer,\r\n    userRegister: userRegisterPeducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdate: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    \r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderList: orderListReducer,\r\n    \r\n    //admin\r\n    deleteUser: deleteUserReducer,\r\n    updateUserByAdmin: updateUserByAdminReducer, \r\n    deleteProduct: productDeletePeducer,\r\n    productCreate: productCreatePeducer,\r\n    updateProduct: productUpdatePeducer,\r\n    orderAllList: adminOrderListReducer,\r\n    orderUpdate: adminOrderUpdateReducer,\r\n    orderDelete: adminOrderDeleteReducer,\r\n}) // combine different reducers in one single\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? \r\nJSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? \r\nJSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? \r\nJSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\nconst paymentMethodFromStorage = localStorage.getItem('paymentMethod') ? \r\nJSON.parse(localStorage.getItem('paymentMethod')) : null\r\n\r\nconst intitialState = {\r\n    cartList: { \r\n        cartItems: cartItemsFromStorage, \r\n        shippingAddress: shippingAddressFromStorage,\r\n        paymentMethod: paymentMethodFromStorage,\r\n    },\r\n    userLogin: { userInfo: userInfoFromStorage },\r\n} // start with default store\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n    reducer, \r\n    intitialState, \r\n    composeWithDevTools(\r\n        applyMiddleware(...middleware)\r\n    )\r\n) // create global store\r\n\r\n\r\nexport default store\r\n\r\n","import { \r\n    PRODUCT_LIST_REQUEST, \r\n    PRODUCT_LIST_SUCCESS, \r\n    PRODUCT_LIST_FAIL, \r\n    PRODUCT_LIST_RESET,\r\n\r\n    PRODUCT_DELETE_ADMIN_REQUEST,\r\n    PRODUCT_DELETE_ADMIN_SUCCESS,\r\n    PRODUCT_DELETE_ADMIN_FAIL,\r\n\r\n    PRODUCT_CREATE_ADMIN_REQUEST,\r\n    PRODUCT_CREATE_ADMIN_SUCCESS,\r\n    PRODUCT_CREATE_ADMIN_FAIL,\r\n    PRODUCT_CREATE_ADMIN_RESET,\r\n    PRODUCT_UPDATE_ADMIN_REQUEST,\r\n    PRODUCT_UPDATE_ADMIN_SUCCESS,\r\n    PRODUCT_UPDATE_ADMIN_FAIL,\r\n    PRODUCT_UPDATE_ADMIN_RESET,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n    PRODUCT_TOP_REQUEST,\r\n\r\n    PRODUCT_UPDATE_REVIEW_FAIL,\r\n    PRODUCT_UPDATE_REVIEW_REQUEST,\r\n    PRODUCT_UPDATE_REVIEW_RESET,\r\n    PRODUCT_UPDATE_REVIEW_SUCCESS,\r\n} from '../constants/productConst'\r\n\r\nexport const productListPeducer = (state = {products:[]}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return { loading: false, \r\n                products: action.payload.products,\r\n                pages: action.payload.pages,\r\n                page: action.payload.page,\r\n            } \r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_LIST_RESET:\r\n            return { products:[] }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDeletePeducer = (state = {products:[]}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DELETE_ADMIN_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_DELETE_ADMIN_SUCCESS:\r\n            return { loading: false, success: true } \r\n        case PRODUCT_DELETE_ADMIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productCreatePeducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_ADMIN_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_CREATE_ADMIN_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload } \r\n        case PRODUCT_CREATE_ADMIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_CREATE_ADMIN_RESET:\r\n            return { }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productUpdatePeducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_UPDATE_ADMIN_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_UPDATE_ADMIN_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload } \r\n        case PRODUCT_UPDATE_ADMIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_UPDATE_ADMIN_RESET:\r\n            return { product: {} }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productCreateReviewReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true } \r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productUpdateReviewReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_UPDATE_REVIEW_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_UPDATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true } \r\n        case PRODUCT_UPDATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_UPDATE_REVIEW_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productTopListPeducer = (state = {products:[]}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_TOP_REQUEST:\r\n            return { loading: true, products: [] }\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return { \r\n                     loading: false, \r\n                     products: action.payload,\r\n                    } \r\n        case PRODUCT_TOP_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL\r\n} from '../constants/detailsConst'\r\n\r\nexport const detailsPeducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return { loading: true, ...state }\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { loading: false, product: action.payload.product, users: action.payload.usersReviewedThisProduct, success:true }\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { \r\n    CART_ADD_ITEM, \r\n    CART_REMOVE_ITEM, \r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    CART_SAVE_PAYMENT_METHOD,\r\n    CART_RESET\r\n} from '../constants/cartConst'\r\n\r\n\r\nexport const cartReducer = (state = { cartItems:[] }, action) => {\r\n    switch(action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n            const existItem = state.cartItems.find( x => x.product === item.product)\r\n            if (existItem){\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map( x => x.product === existItem.product \r\n                    ? item : x ) \r\n                    // если объект с полем \"продукт\" уже существует в корзине, то заменяем тем же продуктом, \r\n                    // у которого могут быть другие параметры. Иначе выводим текущий итем.\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n        case CART_REMOVE_ITEM:\r\n            const id = action.payload\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter( (x) =>  x.product !== id )\r\n            }\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload,\r\n            }\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload,\r\n            }\r\n        case CART_RESET:\r\n            return {\r\n                cartItems:[]\r\n            }\r\n        default:\r\n            return state \r\n    }\r\n}","import { \r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGOUT,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGIN_SUCCESS,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_END,\r\n\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_ADMIN_REQUEST,\r\n    USER_UPDATE_ADMIN_SUCCESS,\r\n    USER_UPDATE_ADMIN_FAIL,\r\n    USER_UPDATE_ADMIN_RESET,\r\n} from '../constants/userConst'\r\n\r\nexport const userLoginPeducer = (state = { }, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true }\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload } \r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_LOGOUT: \r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userRegisterPeducer = (state = { }, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true }\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload } \r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload } \r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading: true }\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, userInfo: action.payload } \r\n        case USER_UPDATE_END:\r\n            return { success: false }\r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_DETAILS_RESET: \r\n            return {\r\n                user: {}\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userListReducer = (state = { users:[] }, action) => {\r\n    switch (action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return { loading: true }\r\n        case USER_LIST_SUCCESS:\r\n            return { loading: false, users:action.payload } \r\n        case USER_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_LIST_RESET: \r\n            return { users:[] }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const deleteUserReducer = (state = {  }, action) => {\r\n    switch (action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return { loading: true }\r\n        case USER_DELETE_SUCCESS:\r\n            return { loading: false, success: true } \r\n        case USER_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const updateUserByAdminReducer = (state = { user:{} }, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_ADMIN_REQUEST:\r\n            return { loading: true }\r\n        case USER_UPDATE_ADMIN_SUCCESS:\r\n            return { loading: false, success: true } \r\n        case USER_UPDATE_ADMIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_UPDATE_ADMIN_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_DETAILS_RESET,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_RESET,\r\n    ORDER_PAY_FAIL,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n    ORDER_LIST_RESET,\r\n\r\n    ORDER_LIST_ADMIN_REQUEST,\r\n    ORDER_LIST_ADMIN_SUCCESS,\r\n    ORDER_LIST_ADMIN_FAIL,\r\n    \r\n    ORDER_UPDATE_ADMIN_REQUEST,\r\n    ORDER_UPDATE_ADMIN_SUCCESS,\r\n    ORDER_UPDATE_ADMIN_FAIL,\r\n    ORDER_UPDATE_ADMIN_RESET,\r\n\r\n    ORDER_DELETE_ADMIN_REQUEST,\r\n    ORDER_DELETE_ADMIN_SUCCESS,\r\n    ORDER_DELETE_ADMIN_FAIL,\r\n} from '../constants/orderConst'\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch(action.type){\r\n        case ORDER_CREATE_REQUEST:\r\n            return { loading: true }\r\n        case ORDER_CREATE_SUCCESS:\r\n            return { \r\n                loading: false, \r\n                order: action.payload,\r\n                success: true\r\n             }\r\n        case ORDER_CREATE_FAIL:\r\n            return { loading: false,\r\n            error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDetailsReducer = (\r\n    state = { \r\n        loading:true, \r\n        orderItems: [], \r\n        shippingAddress: {} \r\n    }, action) => {\r\n    switch(action.type){\r\n        case ORDER_DETAILS_REQUEST:\r\n            return { \r\n                ...state,\r\n                loading: true \r\n            }\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return { \r\n                loading: false, \r\n                order: action.payload,\r\n             }\r\n        case ORDER_DETAILS_FAIL:\r\n            return { loading: false,\r\n            error: action.payload }\r\n        case ORDER_DETAILS_RESET:\r\n            return {\r\n                loading: true,\r\n                orderItems: [], \r\n                shippingAddress: {} \r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderPayReducer = (\r\n    state = {}, action) => {\r\n    switch(action.type){\r\n        case ORDER_PAY_REQUEST:\r\n            return { \r\n                loading: true \r\n            }\r\n        case ORDER_PAY_SUCCESS:\r\n            return { \r\n                loading: false, \r\n                success: true,\r\n             }\r\n        case ORDER_PAY_FAIL:\r\n            return { \r\n                loading: false,\r\n                error: action.payload \r\n            }\r\n         case ORDER_PAY_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListReducer = (\r\n    state = { \r\n        orders:[] \r\n    }, action) => {\r\n    switch(action.type){\r\n        case ORDER_LIST_REQUEST:\r\n            return { \r\n                loading: true \r\n            }\r\n        case ORDER_LIST_SUCCESS:\r\n            return { \r\n                loading: false, \r\n                orders: action.payload\r\n             }\r\n        case ORDER_LIST_FAIL:\r\n            return { \r\n                loading: false,\r\n                error: action.payload \r\n            }\r\n        case ORDER_LIST_RESET:\r\n            return { orders:[] }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const adminOrderListReducer = (\r\n    state = { \r\n        orders:[] \r\n    }, action) => {\r\n    switch(action.type){\r\n        case ORDER_LIST_ADMIN_REQUEST:\r\n            return { \r\n                loading: true \r\n            }\r\n        case ORDER_LIST_ADMIN_SUCCESS:\r\n            return { \r\n                loading: false, \r\n                orders: action.payload\r\n             }\r\n        case ORDER_LIST_ADMIN_FAIL:\r\n            return { \r\n                loading: false,\r\n                error: action.payload \r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const adminOrderUpdateReducer = (\r\n    state = { \r\n    }, action) => {\r\n    switch(action.type){\r\n        case ORDER_UPDATE_ADMIN_REQUEST:\r\n            return { \r\n                loading: true \r\n            }\r\n        case ORDER_UPDATE_ADMIN_SUCCESS:\r\n            return { \r\n                loading: false,\r\n                success: true, \r\n             }\r\n        case ORDER_UPDATE_ADMIN_FAIL:\r\n            return { \r\n                loading: false,\r\n                error: action.payload \r\n            }\r\n        case ORDER_UPDATE_ADMIN_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const adminOrderDeleteReducer = (\r\n    state = {}, action) => {\r\n    switch(action.type){\r\n        case ORDER_DELETE_ADMIN_REQUEST:\r\n            return { \r\n                loading: true \r\n            }\r\n        case ORDER_DELETE_ADMIN_SUCCESS:\r\n            return { \r\n                loading: false,\r\n                success: true, \r\n             }\r\n        case ORDER_DELETE_ADMIN_FAIL:\r\n            return { \r\n                loading: false,\r\n                error: action.payload \r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './bootstrap.min.css'\n\n// connect redux store \nimport { Provider } from 'react-redux'\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}